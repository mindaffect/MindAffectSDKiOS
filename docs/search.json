{"Protocols/DelegateForSimplifiedBrainControl.html#/s:12NoiseTagging33DelegateForSimplifiedBrainControlP015simplifiedSetupdfG8Finished04withfG010completionySb_yyXEtF":{"name":"simplifiedSetupForBrainControlFinished(withBrainControl:completion:)","abstract":"<p><code>SimplifiedBrainControlViewController</code> calls this on its <code>delegate</code> once setting up brain control has finished.</p>","parent_name":"DelegateForSimplifiedBrainControl"},"Protocols/DelegateForSimplifiedBrainControl.html":{"name":"DelegateForSimplifiedBrainControl","abstract":"<p>Protocol for being the <code>delegate</code> of a <code>SimplifiedBrainControlViewController</code>.</p>"},"Extensions/UIDevice.html#/s:So8UIDeviceC12NoiseTaggingE9modelNameSSvp":{"name":"modelName","abstract":"<p>Undocumented</p>","parent_name":"UIDevice"},"Extensions/Float.html#/s:Sf12NoiseTaggingE10stringWith18nDigitsBehindComma012applyMinimalE0SSSi_SbtF":{"name":"stringWith(nDigitsBehindComma:applyMinimalDigits:)","abstract":"<p>Undocumented</p>","parent_name":"Float"},"Extensions/Array.html#/s:Sa12NoiseTaggingE19flippedMatrixOfIntsSaySaySiGGyF":{"name":"flippedMatrixOfInts()","abstract":"<p>Undocumented</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa12NoiseTaggingE10randomItemxyF":{"name":"randomItem()","abstract":"<p>Undocumented</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa12NoiseTaggingSLRzlE14insertionIndex2ofSix_tF":{"name":"insertionIndex(of:)","abstract":"<p>Undocumented</p>","parent_name":"Array"},"Extensions/Int.html#/s:Si12NoiseTaggingE11displayNameSSvp":{"name":"displayName","abstract":"<p>Undocumented</p>","parent_name":"Int"},"Extensions/Int.html#/s:Si12NoiseTaggingE7isEqualySbypSgF":{"name":"isEqual(_:)","abstract":"<p>Undocumented</p>","parent_name":"Int"},"Extensions/RawRepresentable.html#/s:SY12NoiseTaggingSi8RawValueRtzrlE9caseCountSivpZ":{"name":"caseCount","abstract":"<p>For a <code>RawRepresentable</code>, the <code>caseCount</code> of <code>EnumAsSettingProtocol</code> equals the number of possible raw values.</p>","parent_name":"RawRepresentable"},"Extensions/RawRepresentable.html#/s:SY12NoiseTaggingSi8RawValueRtzrlE7valueAt5indexxSgSi_tFZ":{"name":"valueAt(index:)","abstract":"<p>For a <code>RawRepresentable</code>, the <code>valueAt:index</code> of <code>EnumAsSettingProtocol</code> equals the <code>RawRepresentable</code> with the <code>index</code> as its raw value.</p>","parent_name":"RawRepresentable"},"Extensions/String.html#/s:SS12NoiseTaggingE6height20withConstrainedWidth4font12CoreGraphics7CGFloatVAG_So6UIFontCtF":{"name":"height(withConstrainedWidth:font:)","abstract":"<p>Undocumented</p>","parent_name":"String"},"Extensions/String.html#/s:SS12NoiseTaggingE5width21withConstrainedHeight4font12CoreGraphics7CGFloatVAG_So6UIFontCtF":{"name":"width(withConstrainedHeight:font:)","abstract":"<p>Undocumented</p>","parent_name":"String"},"Extensions/String.html#/s:SS12NoiseTaggingE11displayNameSSvp":{"name":"displayName","abstract":"<p>Undocumented</p>","parent_name":"String"},"Extensions/String.html#/s:SS12NoiseTaggingE7isEqualySbypSgF":{"name":"isEqual(_:)","abstract":"<p>Undocumented</p>","parent_name":"String"},"Extensions/String.html#/s:SS12NoiseTaggingE26heightWithConstrainedWidth5width4font12CoreGraphics7CGFloatVAG_So6UIFontCtF":{"name":"heightWithConstrainedWidth(width:font:)","abstract":"<p>Undocumented</p>","parent_name":"String"},"Extensions/UIViewController.html#/s:So16UIViewControllerC12NoiseTaggingE015viewIsInCurrentcD4UnitSbvp":{"name":"viewIsInCurrentNoiseTaggingUnit","abstract":"<p>Undocumented</p>","parent_name":"UIViewController"},"Extensions/UIView.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(py)isHiddenOrIsInHiddenView":{"name":"isHiddenOrIsInHiddenView","parent_name":"UIView"},"Extensions/UIView.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)showWithAppearance:withDefaultColor:":{"name":"show(appearance:withDefaultColor:)","parent_name":"UIView"},"Extensions/UIView.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)setFeedbackColorWithColor:":{"name":"setFeedbackColor(color:)","parent_name":"UIView"},"Extensions/UIView.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)layerToHandleNoiseTagTaps":{"name":"layerToHandleNoiseTagTaps()","parent_name":"UIView"},"Extensions/UIView.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)layerFlickeringPart":{"name":"layerFlickeringPart()","parent_name":"UIView"},"Extensions/UIView.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)layerForFeedbackAnimations":{"name":"layerForFeedbackAnimations()","parent_name":"UIView"},"Extensions/UIView.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)noiseTagControlIsEnabled_didChangeValue":{"name":"noiseTagControlIsEnabled_didChangeValue()","parent_name":"UIView"},"Extensions/UIView.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)updateUIDependingOnNoiseTagging":{"name":"updateUIDependingOnNoiseTagging()","parent_name":"UIView"},"Extensions/UIView.html#/s:So6UIViewC12NoiseTaggingE18addViewAndAutofill7subview6insetsyAB_So12UIEdgeInsetsVtF":{"name":"addViewAndAutofill(subview:insets:)","abstract":"<p>Undocumented</p>","parent_name":"UIView"},"Extensions/UIView.html#/s:So6UIViewC12NoiseTaggingE22addViewAndKeepCentered7subview5width6heightyAB_12CoreGraphics7CGFloatVAJtF":{"name":"addViewAndKeepCentered(subview:width:height:)","abstract":"<p>Undocumented</p>","parent_name":"UIView"},"Extensions/UIView.html#/s:So6UIViewC12NoiseTaggingE18findFirstResponderABSgyF":{"name":"findFirstResponder()","abstract":"<p>Undocumented</p>","parent_name":"UIView"},"Extensions/UIView.html":{"name":"UIView"},"Extensions/UIViewController.html":{"name":"UIViewController"},"Extensions/String.html":{"name":"String"},"Extensions/RawRepresentable.html":{"name":"RawRepresentable","abstract":"<p>This extension makes it easier to conform to <code>EnumAsSettingProtocol</code>.</p>"},"Extensions/Int.html":{"name":"Int","abstract":"<p>Ints automatically implement <code>ItemOfArrayInMenuProtocol</code>.</p>"},"Extensions/Array.html":{"name":"Array"},"Extensions/Float.html":{"name":"Float"},"Other%20Extensions.html#/CircularScrolling":{"name":"CircularScrolling"},"Extensions/UIDevice.html":{"name":"UIDevice"},"Enums/NoiseTagMode.html#/s:12NoiseTagging0A7TagModeO12TrainGenericyA2CmF":{"name":"TrainGeneric","abstract":"<p>Calibration in any context, as long as there are controls available.</p>","parent_name":"NoiseTagMode"},"Enums/NoiseTagMode.html#/s:12NoiseTagging0A7TagModeO11TrainSimpleyA2CmF":{"name":"TrainSimple","abstract":"<p>Calibration in a simple, framework provided UI.</p>","parent_name":"NoiseTagMode"},"Enums/NoiseTagMode.html#/s:12NoiseTagging0A7TagModeO11TrainCustomyA2CmF":{"name":"TrainCustom","abstract":"<p>Calibration as part of a client-defined flow.</p>","parent_name":"NoiseTagMode"},"Enums/NoiseTagMode.html#/s:12NoiseTagging0A7TagModeO4TestyA2CmF":{"name":"Test","abstract":"<p>Normal usage (prediction).</p>","parent_name":"NoiseTagMode"},"Enums/NoiseTagMode.html#/s:12NoiseTagging0A7TagModeO6VerifyyA2CmF":{"name":"Verify","abstract":"<p>Prediction, but with highlighted targets which the user should try to press.</p>","parent_name":"NoiseTagMode"},"Enums/NoiseTagMode.html#/s:12NoiseTagging0A7TagModeO16ElectrodeQualityyA2CmF":{"name":"ElectrodeQuality","abstract":"<p>Showing electrode qualities in the Headset screen.</p>","parent_name":"NoiseTagMode"},"Enums/NoiseTagMode.html#/s:12NoiseTagging0A7TagModeO13SignalQualityyA2CmF":{"name":"SignalQuality","abstract":"<p>Showing signal qualities in the Headset screen.</p>","parent_name":"NoiseTagMode"},"Enums/NoiseTagMode.html#/s:12NoiseTagging0A7TagModeO14DataCollectionyA2CmF":{"name":"DataCollection","abstract":"<p>Optimized for data collection: targets are highlighted and the user should look at them. Trials have a fixed duration. No prediction.</p>","parent_name":"NoiseTagMode"},"Enums/NoiseTagMode.html#/s:12NoiseTagging0A7TagModeO9ZeroTrainyA2CmF":{"name":"ZeroTrain","abstract":"<p>Zero-train.</p>","parent_name":"NoiseTagMode"},"Enums/NoiseTagMode.html#/s:12NoiseTagging0A7TagModeO11displayNameSSvp":{"name":"displayName","abstract":"<p>See <code>EnumAsSettingProtocol</code>&lsquo;s <code>displayName</code>.</p>","parent_name":"NoiseTagMode"},"Enums/CornerViewMode.html#/s:12NoiseTagging14CornerViewModeO3OffyA2CmF":{"name":"Off","abstract":"<p>The corner view is not shown.</p>","parent_name":"CornerViewMode"},"Enums/CornerViewMode.html#/s:12NoiseTagging14CornerViewModeO4SyncyA2CmF":{"name":"Sync","abstract":"<p>The corner view is used for <em>syncing</em>. This means it blinks white on each noise tag start.</p>","parent_name":"CornerViewMode"},"Enums/CornerViewMode.html#/s:12NoiseTagging14CornerViewModeO6TargetyA2CmF":{"name":"Target","abstract":"<p>The corner view shows the same flicker as the current target, if there is any.</p>","parent_name":"CornerViewMode"},"Enums/CornerViewMode.html#/s:12NoiseTagging14CornerViewModeO6CustomyA2CmF":{"name":"Custom","abstract":"<p>The corner view shows the same flicker as a user-defined control.</p>","parent_name":"CornerViewMode"},"Enums/CornerViewMode.html#/s:12NoiseTagging14CornerViewModeO11displayNameSSvp":{"name":"displayName","abstract":"<p>See <code>EnumAsSettingProtocol</code>&lsquo;s <code>displayName</code>.</p>","parent_name":"CornerViewMode"},"Enums/ContrastMode.html#/s:12NoiseTagging12ContrastModeO3MinyA2CmF":{"name":"Min","abstract":"<p>Minimum contrast.</p>","parent_name":"ContrastMode"},"Enums/ContrastMode.html#/s:12NoiseTagging12ContrastModeO3LowyA2CmF":{"name":"Low","abstract":"<p>Low contrast.</p>","parent_name":"ContrastMode"},"Enums/ContrastMode.html#/s:12NoiseTagging12ContrastModeO6MediumyA2CmF":{"name":"Medium","abstract":"<p>Medium contrast.</p>","parent_name":"ContrastMode"},"Enums/ContrastMode.html#/s:12NoiseTagging12ContrastModeO4HighyA2CmF":{"name":"High","abstract":"<p>High contrast.</p>","parent_name":"ContrastMode"},"Enums/ContrastMode.html#/s:12NoiseTagging12ContrastModeO3MaxyA2CmF":{"name":"Max","abstract":"<p>Maximum contrast.</p>","parent_name":"ContrastMode"},"Enums/ContrastMode.html#/s:12NoiseTagging12ContrastModeO14possibleValuesSayACGvpZ":{"name":"possibleValues","abstract":"<p>See <code>EnumAsSettingProtocol</code></p>","parent_name":"ContrastMode"},"Enums/ContrastMode.html#/s:12NoiseTagging12ContrastModeO7indexOf4modeSiSgAC_tFZ":{"name":"indexOf(mode:)","abstract":"<p>See <code>EnumAsSettingProtocol</code></p>","parent_name":"ContrastMode"},"Enums/ContrastMode.html#/s:12NoiseTagging12ContrastModeO10colorBitOnSo7UIColorCvp":{"name":"colorBitOn","abstract":"<p>The color for a noise tag&rsquo;s on-bits given this contrast mode and <code>colorBitOnIfMaxContrast</code> setting.</p>","parent_name":"ContrastMode"},"Enums/ContrastMode.html#/s:12NoiseTagging12ContrastModeO11colorBitOffSo7UIColorCvp":{"name":"colorBitOff","abstract":"<p>The color for a noise tag&rsquo;s off-bits given this contrast mode and <code>colorBitOnIfMaxContrast</code> setting.</p>","parent_name":"ContrastMode"},"Enums/ContrastMode.html#/s:12NoiseTagging12ContrastModeO11displayNameSSvp":{"name":"displayName","abstract":"<p>See <code>EnumAsSettingProtocol</code>&lsquo;s <code>displayName</code>.</p>","parent_name":"ContrastMode"},"Enums/ClickFeedbackMode.html#/s:12NoiseTagging17ClickFeedbackModeO4NoneyA2CmF":{"name":"None","abstract":"<p>No feedback.</p>","parent_name":"ClickFeedbackMode"},"Enums/ClickFeedbackMode.html#/s:12NoiseTagging17ClickFeedbackModeO15NonselectedGrayyA2CmF":{"name":"NonselectedGray","abstract":"<p>The pressed control temporarily becomes white, while all other controls temporarily become gray.</p>","parent_name":"ClickFeedbackMode"},"Enums/ClickFeedbackMode.html#/s:12NoiseTagging17ClickFeedbackModeO16SelectedAnimatesyA2CmF":{"name":"SelectedAnimates","abstract":"<p>The pressed control temporarily schrinks.</p>","parent_name":"ClickFeedbackMode"},"Enums/ClickFeedbackMode.html#/s:12NoiseTagging17ClickFeedbackModeO9RedBorderyA2CmF":{"name":"RedBorder","abstract":"<p>Temporarily a red border is shown around the pressed control.</p>","parent_name":"ClickFeedbackMode"},"Enums/ClickFeedbackMode.html#/s:12NoiseTagging17ClickFeedbackModeO11displayNameSSvp":{"name":"displayName","abstract":"<p>See <code>EnumAsSettingProtocol</code>&lsquo;s <code>displayName</code>.</p>","parent_name":"ClickFeedbackMode"},"Enums/ClickFeedbackMode.html":{"name":"ClickFeedbackMode","abstract":"<p>Possible types of feedback when buttons are pressed.</p>"},"Enums/ContrastMode.html":{"name":"ContrastMode","abstract":"<p>Possible contrast modes for the flickering.</p>"},"Enums/CornerViewMode.html":{"name":"CornerViewMode","abstract":"<p>The different ways a <em>corner view</em> can be used.</p>"},"Enums/NoiseTagMode.html":{"name":"NoiseTagMode","abstract":"<p>The different modes <code><a href=\"36f8f5912051ae747ef441d6511ca4cbMain%20Symbols.html#/s:12NoiseTaggingA2A0A13TagControllerCvp\">NoiseTagging</a></code> can be in. This mode determines what <code><a href=\"36f8f5912051ae747ef441d6511ca4cbMain%20Symbols.html#/s:12NoiseTaggingA2A0A13TagControllerCvp\">NoiseTagging</a></code> is used for.</p>"},"Other%20Global%20Variables.html#/s:12NoiseTagging22kColorMindAffectOrangeSo7UIColorCvp":{"name":"kColorMindAffectOrange","abstract":"<p>MindAffect-orange.</p>"},"Other%20Global%20Variables.html#/s:12NoiseTagging014kDefaultHeightA9TagButton12CoreGraphics7CGFloatVvp":{"name":"kDefaultHeightNoiseTagButton","abstract":"<p>Default height for noise tagging buttons, based on the device&rsquo;s screen size.</p>"},"Other%20Global%20Variables.html#/s:12NoiseTagging013kDefaultWidthA9TagButton12CoreGraphics7CGFloatVvp":{"name":"kDefaultWidthNoiseTagButton","abstract":"<p>Default width for noise tagging buttons, based on the device&rsquo;s screen size.</p>"},"license.html":{"name":"LICENSE"},"Protocols/SettingSubscriber.html#/s:12NoiseTagging17SettingSubscriberP14valueChangedOf7setting5inSetyAA0C0_p_AA0jG8SettingsCtF":{"name":"valueChangedOf(setting:inSet:)","abstract":"<p>Undocumented</p>","parent_name":"SettingSubscriber"},"Protocols/SettingObserver.html#/c:@M@NoiseTagging@objc(pl)SettingObserver(im)valueChangedForSetting:":{"name":"valueChangedFor(setting:)","abstract":"<p>Whenever a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html\">Setting</a></code>&lsquo;s value changes, it calls this on each of its <code>observers</code>.</p>","parent_name":"SettingObserver"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)title":{"name":"title","abstract":"<p>The setting&rsquo;s title, as displayed in the UI.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)isEditable":{"name":"isEditable","abstract":"<p>Whether the settings is editable by the user.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)isVisibleInUI":{"name":"isVisibleInUI","abstract":"<p>If the setting is part of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SetOfSettings.html\">SetOfSettings</a></code> and UI is displayed to edit that set, this determines whether the setting is also visible in the UI.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)help":{"name":"help","abstract":"<p>An explanation for the user about what the setting exactly is about.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)observers":{"name":"observers","abstract":"<p>A setting&rsquo;s observers are informed whenever the setting&rsquo;s value changes.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)validityCheck":{"name":"validityCheck","abstract":"<p>A closure which checks whether a certain value is a valid value for the setting.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)actionBeforeChange":{"name":"actionBeforeChange","abstract":"<p>An optional closures that is executed just before changing the setting&rsquo;s value:</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)actionAfterChange":{"name":"actionAfterChange","abstract":"<p>An optional closures that is executed just after changing the setting&rsquo;s value:</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)allowsUndefined":{"name":"allowsUndefined","abstract":"<p>Whether the setting allows to be undefined.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)isUndefined":{"name":"isUndefined","abstract":"<p>Whether the setting is &lsquo;undefined&rsquo;. Only relevant if <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)allowsUndefined\">allowsUndefined</a></code> is <code>true</code>.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(im)setToUndefined":{"name":"setToUndefined()","abstract":"<p>Set the setting value to <code>undefined</code>.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(py)descriptionValue":{"name":"descriptionValue","abstract":"<p>Subclasses should NOT override <code>descriptionValue</code>. Instead they should implement <code>descriptionValueIfDefined</code>.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(im)addWithObserver:":{"name":"add(observer:)","abstract":"<p>Add a new observer, which is informed whenever the setting&rsquo;s value changes.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/c:@M@NoiseTagging@objc(cs)Setting_abstract(im)removeWithObserver:":{"name":"remove(observer:)","abstract":"<p>Remove an observer, so it is no longer informed whenever the setting&rsquo;s value changes.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/s:12NoiseTagging16Setting_abstractC6encode4withySo7NSCoderC_tF":{"name":"encode(with:)","abstract":"<p>Encode to the passed <code>NSCoder</code>.</p>","parent_name":"Setting_abstract"},"Classes/Setting_abstract.html#/s:12NoiseTagging16Setting_abstractC6decode4withySo7NSCoderC_tF":{"name":"decode(with:)","abstract":"<p>Decode from the passed <code>NSCoder</code>.</p>","parent_name":"Setting_abstract"},"Classes/PickableColor.html#/s:12NoiseTagging13PickableColorC11displayNameSSvp":{"name":"displayName","abstract":"<p>A user-friendly description of the color.</p>","parent_name":"PickableColor"},"Classes/PickableColor.html#/s:12NoiseTagging13PickableColorC5colorSo7UIColorCvp":{"name":"color","abstract":"<p>The color.</p>","parent_name":"PickableColor"},"Classes/PickableColor.html#/s:12NoiseTagging13PickableColorC11displayName5colorACSS_So7UIColorCtcfc":{"name":"init(displayName:color:)","abstract":"<p>Initialize a new <code>PickableColor</code>, with the passed <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/PickableColor.html#/s:12NoiseTagging13PickableColorC11displayNameSSvp\">displayName</a></code> and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/PickableColor.html#/s:12NoiseTagging13PickableColorC5colorSo7UIColorCvp\">color</a></code>.</p>","parent_name":"PickableColor"},"Classes/PickableColor.html#/s:12NoiseTagging13PickableColorC11displayName4r2554g2554b2555alphaACSS_12CoreGraphics7CGFloatVA3Ktcfc":{"name":"init(displayName:r255:g255:b255:alpha:)","abstract":"<p>Initialize a new <code>PickableColor</code>, with the passed <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/PickableColor.html#/s:12NoiseTagging13PickableColorC11displayNameSSvp\">displayName</a></code> and a color with the passed RGB values.</p>","parent_name":"PickableColor"},"Classes/ColorSetting.html#/s:12NoiseTagging12ColorSettingC5colorSo7UIColorCvp":{"name":"color","abstract":"<p>The currently selected color.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/s:12NoiseTagging12ColorSettingC5title14pickableColors011indexPickedC010isEditable4helpACSS_SayAA08PickableC0CGSiSgSbSSSgtcfc":{"name":"init(title:pickableColors:indexPickedColor:isEditable:help:)","abstract":"<p>Initialize a new <code>ColorSetting</code>, using pickable colors.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/s:12NoiseTagging12ColorSettingC5title5color10isEditable4helpACSS_So7UIColorCSbSSSgtcfc":{"name":"init(title:color:isEditable:help:)","abstract":"<p>Initialize a new <code>ColorSetting</code>, using a RGBA color instead of pickable colors.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/s:12NoiseTagging12ColorSettingC22numberOfPickableColorsSivp":{"name":"numberOfPickableColors","abstract":"<p>The number of pickable colors.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/s:12NoiseTagging12ColorSettingC08pickableC2At5indexAA08PickableC0CSi_tF":{"name":"pickableColorAt(index:)","abstract":"<p>The pickable color at <code>index</code>.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/s:12NoiseTagging12ColorSettingC6select5colorySo7UIColorC_tF":{"name":"select(color:)","abstract":"<p>Make <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ColorSetting.html#/s:12NoiseTagging12ColorSettingC5colorSo7UIColorCvp\">color</a></code> the current setting&rsquo;s current value.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/c:@M@NoiseTagging@objc(cs)ColorSetting(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Copy the <code>ColorSetting</code>.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/c:@M@NoiseTagging@objc(cs)ColorSetting(py)description":{"name":"description","abstract":"<p>A user-friendly description of the <code>ColorSetting</code>.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/c:@M@NoiseTagging@objc(cs)ColorSetting(py)descriptionValueIfDefined":{"name":"descriptionValueIfDefined","abstract":"<p>A description of the setting&rsquo;s value, assuming a value is defined. Used for logging purposes.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/c:@M@NoiseTagging@objc(cs)ColorSetting(im)updateValueToMatchWithNewSetting:":{"name":"updateValueToMatch(newSetting:)","abstract":"<p>Sets the receiver&rsquo;s setting value to the setting value of <code>newSetting</code>.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/c:@M@NoiseTagging@objc(cs)ColorSetting(py)hasDefaultValue":{"name":"hasDefaultValue","abstract":"<p>Settings may have a default value, which can easily be restored by the user using the standard UI for editing settings provided by the NoiseTagging framework.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/c:@M@NoiseTagging@objc(cs)ColorSetting(im)resetToDefault":{"name":"resetToDefault()","abstract":"<p>Set the setting value to the default value.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/c:@M@NoiseTagging@objc(cs)ColorSetting(py)cellNibName":{"name":"cellNibName","abstract":"<p>The name of the nib used for generating UI for editing the setting.</p>","parent_name":"ColorSetting"},"Classes/ColorSetting.html#/c:@M@NoiseTagging@objc(cs)ColorSetting(py)cellReuseIdentifier":{"name":"cellReuseIdentifier","abstract":"<p>The NoiseTagging framework provides standard UI for editing settings. This UI consists of a table view, where each cell is used for one setting. The <code>cellReuseIdentifier</code> makes it possible to reuse these cells per setting type.</p>","parent_name":"ColorSetting"},"Protocols/ItemOfArrayInMenu.html#/s:12NoiseTagging17ItemOfArrayInMenuP11displayNameSSvp":{"name":"displayName","abstract":"<p>Undocumented</p>","parent_name":"ItemOfArrayInMenu"},"Protocols/ItemOfArrayInMenu.html#/s:12NoiseTagging17ItemOfArrayInMenuP7isEqualySbypSgF":{"name":"isEqual(_:)","abstract":"<p>Undocumented</p>","parent_name":"ItemOfArrayInMenu"},"Classes/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC17indexInitialValueSivp":{"name":"indexInitialValue","abstract":"<p>The index of the initial value. This is remembered so the user can always restore it.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC10indexValueSivp":{"name":"indexValue","abstract":"<p>The index of the setting&rsquo;s current value.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC12initialValueAA0cdE6InMenu_pvp":{"name":"initialValue","abstract":"<p>The setting&rsquo;s initial value.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC5valueAA0cdE6InMenu_pvp":{"name":"value","abstract":"<p>The setting&rsquo;s current value.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC5title14possibleValues10indexValue016usePickerInsteadD16SegmentedControl10isEditable4helpACSS_SayAA0cdE6InMenu_pGSiS2bSSSgtcfc":{"name":"init(title:possibleValues:indexValue:usePickerInsteadOfSegmentedControl:isEditable:help:)","abstract":"<p>Initialize a new <code>ItemOfArraySetting</code>.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC8indexFor5valueSiSgAA0cdE6InMenu_p_tF":{"name":"indexFor(value:)","abstract":"<p>The index of the passed <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC5valueAA0cdE6InMenu_pvp\">value</a></code> in <code>possibleValues</code>.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC06numberD14PossibleValuesSivp":{"name":"numberOfPossibleValues","abstract":"<p>The number of possible values the setting can have.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC15possibleValueAt5indexAA0cdE6InMenu_pSi_tF":{"name":"possibleValueAt(index:)","abstract":"<p>The value of <code>possibleValues</code> at <code>index</code>.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC6select5valueyAA0cdE6InMenu_p_tF":{"name":"select(value:)","abstract":"<p>Make the passed <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC5valueAA0cdE6InMenu_pvp\">value</a></code> the setting&rsquo;s current value.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/s:12NoiseTagging18ItemOfArraySettingC15selectValueWith11displayNameSbSS_tF":{"name":"selectValueWith(displayName:)","abstract":"<p>Search for a possible value with the passed <code>displayName</code> and make it the setting&rsquo;s current value.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/c:@M@NoiseTagging@objc(cs)ItemOfArraySetting(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Copy the <code>ItemOfArraySetting</code>.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/c:@M@NoiseTagging@objc(cs)ItemOfArraySetting(py)description":{"name":"description","abstract":"<p>A user-friendly description of the <code>ItemOfArraySetting</code>.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/c:@M@NoiseTagging@objc(cs)ItemOfArraySetting(py)descriptionValueIfDefined":{"name":"descriptionValueIfDefined","abstract":"<p>A description of the setting&rsquo;s value, assuming a value is defined. Used for logging purposes.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/c:@M@NoiseTagging@objc(cs)ItemOfArraySetting(im)updateValueToMatchWithNewSetting:":{"name":"updateValueToMatch(newSetting:)","abstract":"<p>Sets the receiver&rsquo;s setting value to the setting value of <code>newSetting</code>.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/c:@M@NoiseTagging@objc(cs)ItemOfArraySetting(py)hasDefaultValue":{"name":"hasDefaultValue","abstract":"<p>Settings may have a default value, which can easily be restored by the user using the standard UI for editing settings provided by the NoiseTagging framework.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/c:@M@NoiseTagging@objc(cs)ItemOfArraySetting(im)resetToDefault":{"name":"resetToDefault()","abstract":"<p>Set the setting value to the default value.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/c:@M@NoiseTagging@objc(cs)ItemOfArraySetting(py)cellNibName":{"name":"cellNibName","abstract":"<p>The name of the nib used for generating UI for editing the setting.</p>","parent_name":"ItemOfArraySetting"},"Classes/ItemOfArraySetting.html#/c:@M@NoiseTagging@objc(cs)ItemOfArraySetting(py)cellReuseIdentifier":{"name":"cellReuseIdentifier","abstract":"<p>The NoiseTagging framework provides standard UI for editing settings. This UI consists of a table view, where each cell is used for one setting. The <code>cellReuseIdentifier</code> makes it possible to reuse these cells per setting type.</p>","parent_name":"ItemOfArraySetting"},"Protocols/EnumAsSetting.html#/s:12NoiseTagging13EnumAsSettingP9caseCountSivpZ":{"name":"caseCount","abstract":"<p>The number of possible cases the enum has.</p>","parent_name":"EnumAsSetting"},"Protocols/EnumAsSetting.html#/s:12NoiseTagging13EnumAsSettingP7valueAt5indexxSgSi_tFZ":{"name":"valueAt(index:)","abstract":"<p>The case of the enum at the passed <code>index</code>.</p>","parent_name":"EnumAsSetting"},"Protocols/EnumAsSetting.html#/s:12NoiseTagging13EnumAsSettingP11displayNameSSvp":{"name":"displayName","abstract":"<p>A user-friendly description of the enum case.</p>","parent_name":"EnumAsSetting"},"Protocols/EnumAsSetting.html#/s:12NoiseTagging13EnumAsSettingP8subTitleSSSgvp":{"name":"subTitle","abstract":"<p>An optional sub title for the enum case, which can be used to provide the user with more elaborate information about what the enum case means.</p>","parent_name":"EnumAsSetting"},"Protocols/EnumAsSetting.html#/s:12NoiseTagging13EnumAsSettingP13displayNameAt5indexSSSi_tFZ":{"name":"displayNameAt(index:)","abstract":"<p>A user-friendly description of the enum case with the passed <code>index</code>.</p>","parent_name":"EnumAsSetting"},"Protocols/EnumAsSetting.html#/s:12NoiseTagging13EnumAsSettingP8rawValueSivp":{"name":"rawValue","abstract":"<p>The case&rsquo;s raw value, as an <code>Int</code>.</p>","parent_name":"EnumAsSetting"},"Classes/EnumSetting.html#/s:12NoiseTagging11EnumSettingC12initialValueAA0c2AsD0_pvp":{"name":"initialValue","abstract":"<p>The setting&rsquo;s initial value. This is remembered so the user can always restore it.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/s:12NoiseTagging11EnumSettingC5valueAA0c2AsD0_pvp":{"name":"value","abstract":"<p>The setting&rsquo;s current value.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/s:12NoiseTagging11EnumSettingC5title5value34usePickerInsteadOfSegmentedControl10isEditable4helpACSS_AA0c2AsD0_pS2bSSSgtcfc":{"name":"init(title:value:usePickerInsteadOfSegmentedControl:isEditable:help:)","abstract":"<p>Initialize a new <code>EnumSetting</code>.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/s:12NoiseTagging11EnumSettingC9caseCountSivp":{"name":"caseCount","abstract":"<p>The number of possible enum values.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/s:12NoiseTagging11EnumSettingC7valueAt5indexAA0c2AsD0_pSgSi_tF":{"name":"valueAt(index:)","abstract":"<p>The enum value at <code>index</code>.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/s:12NoiseTagging11EnumSettingC13displayNameAt5indexSSSi_tF":{"name":"displayNameAt(index:)","abstract":"<p>The user description of the enum value at <code>index</code>.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/s:12NoiseTagging11EnumSettingC12setValueWith03rawF0ySi_tF":{"name":"setValueWith(rawValue:)","abstract":"<p>Set as the value the enum with the passed <code>rawValue</code>.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/s:12NoiseTagging11EnumSettingC15selectValueWith11displayNameSbSS_tF":{"name":"selectValueWith(displayName:)","abstract":"<p>Set as the value the enum with the passed <code>displayName</code>.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/s:12NoiseTagging11EnumSettingC12indexOfValueSivp":{"name":"indexOfValue","abstract":"<p>The current value&rsquo;s <code>rawValue</code>.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/c:@M@NoiseTagging@objc(cs)EnumSetting(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Copy the <code>EnumSetting</code>.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/c:@M@NoiseTagging@objc(cs)EnumSetting(py)description":{"name":"description","abstract":"<p>A user-friendly description of the <code>EnumSetting</code>.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/c:@M@NoiseTagging@objc(cs)EnumSetting(py)descriptionValueIfDefined":{"name":"descriptionValueIfDefined","abstract":"<p>A description of the setting&rsquo;s value, assuming a value is defined. Used for logging purposes.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/c:@M@NoiseTagging@objc(cs)EnumSetting(im)updateValueToMatchWithNewSetting:":{"name":"updateValueToMatch(newSetting:)","abstract":"<p>Sets the receiver&rsquo;s setting value to the setting value of <code>newSetting</code>.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/c:@M@NoiseTagging@objc(cs)EnumSetting(py)hasDefaultValue":{"name":"hasDefaultValue","abstract":"<p>Settings may have a default value, which can easily be restored by the user using the standard UI for editing settings provided by the NoiseTagging framework.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/c:@M@NoiseTagging@objc(cs)EnumSetting(im)resetToDefault":{"name":"resetToDefault()","abstract":"<p>Set the setting value to the default value.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/c:@M@NoiseTagging@objc(cs)EnumSetting(py)cellNibName":{"name":"cellNibName","abstract":"<p>The name of the nib used for generating UI for editing the setting.</p>","parent_name":"EnumSetting"},"Classes/EnumSetting.html#/c:@M@NoiseTagging@objc(cs)EnumSetting(py)cellReuseIdentifier":{"name":"cellReuseIdentifier","abstract":"<p>The NoiseTagging framework provides standard UI for editing settings. This UI consists of a table view, where each cell is used for one setting. The <code>cellReuseIdentifier</code> makes it possible to reuse these cells per setting type.</p>","parent_name":"EnumSetting"},"Classes/TextSetting.html#/s:12NoiseTagging11TextSettingC12initialValueSSvp":{"name":"initialValue","abstract":"<p>The setting&rsquo;s initial value. This is remembered so the user can always restore it.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/s:12NoiseTagging11TextSettingC5valueSSvp":{"name":"value","abstract":"<p>The setting&rsquo;s current value.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/s:12NoiseTagging11TextSettingC5title5value10isEditable4helpACSS_SSSbSSSgtcfc":{"name":"init(title:value:isEditable:help:)","abstract":"<p>Initialize a new <code>StringSetting</code>.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Copy the <code>StringSetting</code>.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(im)encodeWithCoder:":{"name":"encode(with:)","abstract":"<p>Encode the <code>StringSetting</code>.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize a new <code>StringSetting</code> by decoding from <code>aDecoder</code>.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(py)description":{"name":"description","abstract":"<p>A user-friendly description of the <code>StringSetting</code>.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(py)descriptionValueIfDefined":{"name":"descriptionValueIfDefined","abstract":"<p>A description of the setting&rsquo;s value, assuming a value is defined. Used for logging purposes.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(py)valueAsJson":{"name":"valueAsJson","abstract":"<p>The setting&rsquo;s value described using JSON. Used for logging purposes.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(im)updateValueToMatchWithNewSetting:":{"name":"updateValueToMatch(newSetting:)","abstract":"<p>Sets the receiver&rsquo;s setting value to the setting value of <code>newSetting</code>.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(py)hasDefaultValue":{"name":"hasDefaultValue","abstract":"<p>Settings may have a default value, which can easily be restored by the user using the standard UI for editing settings provided by the NoiseTagging framework.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(im)resetToDefault":{"name":"resetToDefault()","abstract":"<p>Set the setting value to the default value.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(py)cellNibName":{"name":"cellNibName","abstract":"<p>The name of the nib used for generating UI for editing the setting.</p>","parent_name":"TextSetting"},"Classes/TextSetting.html#/c:@M@NoiseTagging@objc(cs)TextSetting(py)cellReuseIdentifier":{"name":"cellReuseIdentifier","abstract":"<p>The NoiseTagging framework provides standard UI for editing settings. This UI consists of a table view, where each cell is used for one setting. The <code>cellReuseIdentifier</code> makes it possible to reuse these cells per setting type.</p>","parent_name":"TextSetting"},"Classes/DoubleSetting.html#/s:12NoiseTagging13DoubleSettingC12initialValueSdvp":{"name":"initialValue","abstract":"<p>The setting&rsquo;s initial value. This is remembered so the user can always restore it.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/s:12NoiseTagging13DoubleSettingC5valueSdvp":{"name":"value","abstract":"<p>The setting&rsquo;s current value.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/s:12NoiseTagging13DoubleSettingC5title5value10isEditable4helpACSS_SdSbSSSgtcfc":{"name":"init(title:value:isEditable:help:)","abstract":"<p>Initialize a new <code>DoubleSetting</code>.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Copy the <code>DoubleSetting</code>.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(im)encodeWithCoder:":{"name":"encode(with:)","abstract":"<p>Encode the <code>DoubleSetting</code>.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize a new <code>DoubleSetting</code> by decoding from <code>aDecoder</code>.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(py)description":{"name":"description","abstract":"<p>A user-friendly description of the <code>DoubleSetting</code>.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(py)descriptionValueIfDefined":{"name":"descriptionValueIfDefined","abstract":"<p>A description of the setting&rsquo;s value, assuming a value is defined. Used for logging purposes.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(py)valueAsJson":{"name":"valueAsJson","abstract":"<p>The setting&rsquo;s value described using JSON. Used for logging purposes.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(im)updateValueToMatchWithNewSetting:":{"name":"updateValueToMatch(newSetting:)","abstract":"<p>Sets the receiver&rsquo;s setting value to the setting value of <code>newSetting</code>.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(py)hasDefaultValue":{"name":"hasDefaultValue","abstract":"<p>Settings may have a default value, which can easily be restored by the user using the standard UI for editing settings provided by the NoiseTagging framework.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(im)resetToDefault":{"name":"resetToDefault()","abstract":"<p>Set the setting value to the default value.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(py)cellNibName":{"name":"cellNibName","abstract":"<p>The name of the nib used for generating UI for editing the setting.</p>","parent_name":"DoubleSetting"},"Classes/DoubleSetting.html#/c:@M@NoiseTagging@objc(cs)DoubleSetting(py)cellReuseIdentifier":{"name":"cellReuseIdentifier","abstract":"<p>The NoiseTagging framework provides standard UI for editing settings. This UI consists of a table view, where each cell is used for one setting. The <code>cellReuseIdentifier</code> makes it possible to reuse these cells per setting type.</p>","parent_name":"DoubleSetting"},"Classes/IntSetting.html#/s:12NoiseTagging10IntSettingC12initialValueSivp":{"name":"initialValue","abstract":"<p>The setting&rsquo;s initial value. This is remembered so the user can always restore it.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/s:12NoiseTagging10IntSettingC5valueSivp":{"name":"value","abstract":"<p>The setting&rsquo;s current value.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/s:12NoiseTagging10IntSettingC5title5value10isEditable4helpACSS_SiSbSSSgtcfc":{"name":"init(title:value:isEditable:help:)","abstract":"<p>Initialize a new <code>IntSetting</code>.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Copy the <code>IntSetting</code>.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(im)encodeWithCoder:":{"name":"encode(with:)","abstract":"<p>Encode the <code>IntSetting</code>.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize a new <code>IntSetting</code> by decoding from <code>aDecoder</code>.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(py)description":{"name":"description","abstract":"<p>A user-friendly description of the <code>IntSetting</code>.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(py)descriptionValueIfDefined":{"name":"descriptionValueIfDefined","abstract":"<p>A description of the setting&rsquo;s value, assuming a value is defined. Used for logging purposes.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(py)valueAsJson":{"name":"valueAsJson","abstract":"<p>The setting&rsquo;s value described using JSON. Used for logging purposes.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(im)updateValueToMatchWithNewSetting:":{"name":"updateValueToMatch(newSetting:)","abstract":"<p>Sets the receiver&rsquo;s setting value to the setting value of <code>newSetting</code>.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(py)hasDefaultValue":{"name":"hasDefaultValue","abstract":"<p>Settings may have a default value, which can easily be restored by the user using the standard UI for editing settings provided by the NoiseTagging framework.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(im)resetToDefault":{"name":"resetToDefault()","abstract":"<p>Set the setting value to the default value.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(py)cellNibName":{"name":"cellNibName","abstract":"<p>The name of the nib used for generating UI for editing the setting.</p>","parent_name":"IntSetting"},"Classes/IntSetting.html#/c:@M@NoiseTagging@objc(cs)IntSetting(py)cellReuseIdentifier":{"name":"cellReuseIdentifier","abstract":"<p>The NoiseTagging framework provides standard UI for editing settings. This UI consists of a table view, where each cell is used for one setting. The <code>cellReuseIdentifier</code> makes it possible to reuse these cells per setting type.</p>","parent_name":"IntSetting"},"Classes/BoolSetting.html#/s:12NoiseTagging11BoolSettingC12initialValueSbvp":{"name":"initialValue","abstract":"<p>The setting&rsquo;s initial value. This is remembered so the user can always restore it.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/s:12NoiseTagging11BoolSettingC5valueSbvp":{"name":"value","abstract":"<p>The setting&rsquo;s current value.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/s:12NoiseTagging11BoolSettingC5title5value10isEditable4helpACSS_S2bSSSgtcfc":{"name":"init(title:value:isEditable:help:)","abstract":"<p>Initialize a new <code>BoolSetting</code>.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Copy the <code>BoolSetting</code>.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(im)encodeWithCoder:":{"name":"encode(with:)","abstract":"<p>Encode the <code>BoolSetting</code>.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize a new <code>BoolSetting</code> by decoding from <code>aDecoder</code>.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(py)description":{"name":"description","abstract":"<p>A user-friendly description of the <code>BoolSetting</code>.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(py)descriptionValueIfDefined":{"name":"descriptionValueIfDefined","abstract":"<p>A description of the setting&rsquo;s value, assuming a value is defined. Used for logging purposes.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(py)valueAsJson":{"name":"valueAsJson","abstract":"<p>The setting&rsquo;s value described using JSON. Used for logging purposes.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(im)updateValueToMatchWithNewSetting:":{"name":"updateValueToMatch(newSetting:)","abstract":"<p>Sets the receiver&rsquo;s setting value to the setting value of <code>newSetting</code>.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(py)hasDefaultValue":{"name":"hasDefaultValue","abstract":"<p>Settings may have a default value, which can easily be restored by the user using the standard UI for editing settings provided by the NoiseTagging framework.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(im)resetToDefault":{"name":"resetToDefault()","abstract":"<p>Set the setting value to the default value.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(py)cellNibName":{"name":"cellNibName","abstract":"<p>The name of the nib used for generating UI for editing the setting.</p>","parent_name":"BoolSetting"},"Classes/BoolSetting.html#/c:@M@NoiseTagging@objc(cs)BoolSetting(py)cellReuseIdentifier":{"name":"cellReuseIdentifier","abstract":"<p>The NoiseTagging framework provides standard UI for editing settings. This UI consists of a table view, where each cell is used for one setting. The <code>cellReuseIdentifier</code> makes it possible to reuse these cells per setting type.</p>","parent_name":"BoolSetting"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV04showaC13IDsOnControlsSSvpZ":{"name":"showNoiseTagIDsOnControls","abstract":"<p>Whether to show the noise tag IDs on top of the controls. Only for debugging.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV12framesPerBitSSvpZ":{"name":"framesPerBit","abstract":"<p>Noise tags can be described as sequences of ones and zeros, where each 1 means white and 0 means black. These ones and zeros we call bits. This setting determines how many frames are used to display one bit. In other words: change this setting to change the speed by which noise tags are being played.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV25preferredNFramesPerSecondSSvpZ":{"name":"preferredNFramesPerSecond","abstract":"<p>Preferred frame rate for playing noise tags.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV24doubleTapOpensBrainSetupSSvpZ":{"name":"doubleTapOpensBrainSetup","abstract":"<p>Whether the user can double tap to bring up UI for connecting her brain.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV38twoFingerDoubleTapOpensDeveloperScreenSSvpZ":{"name":"twoFingerDoubleTapOpensDeveloperScreen","abstract":"<p>Whether the user can double tap with two fingers to open the Developer screen.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV046useTapsForTogglingWhetherControlsParticipateInaB0SSvpZ":{"name":"useTapsForTogglingWhetherControlsParticipateInNoiseTagging","abstract":"<p>This is for debugging only.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV08filenameA4TagsSSvpZ":{"name":"filenameNoiseTags","abstract":"<p>The name of the .txt file that defines the noise tags that should be used.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV4modeSSvpZ":{"name":"mode","abstract":"<p>The mode we currently are running.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV14leftCornerViewSSvpZ":{"name":"leftCornerView","abstract":"<p>Mode of the left corner view.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV021leftCornerViewIndexOfaC0SSvpZ":{"name":"leftCornerViewIndexOfNoiseTag","abstract":"<p>Index of noise tag that should be used when using the &lsquo;Custom&rsquo; mode for the left corner view.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV15rightCornerViewSSvpZ":{"name":"rightCornerView","abstract":"<p>Mode of the right corner view.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV022rightCornerViewIndexOfaC0SSvpZ":{"name":"rightCornerViewIndexOfNoiseTag","abstract":"<p>Index of noise tag that should be used when using the &lsquo;Custom&rsquo; mode for the right corner view.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV17clickSoundOnPressSSvpZ":{"name":"clickSoundOnPress","abstract":"<p>Whether a click sound should be played whenever pressing a noise tag control. This defines the default behaviour, which can be overridden for specific controls using <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseTagControl.html\">NoiseTagControl</a></code>&lsquo;s <code>playClickSoundOnPress</code>.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV17enableOtherSoundsSSvpZ":{"name":"enableOtherSounds","abstract":"<p>Whether NoiseTagging should play sounds other than click sounds.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV12contrastModeSSvpZ":{"name":"contrastMode","abstract":"<p>The contrast used for making controls flicker.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV5voiceSSvpZ":{"name":"voice","abstract":"<p>The voice used by NoiseTagging&rsquo;s text-to-speech system.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV10speechRateSSvpZ":{"name":"speechRate","abstract":"<p>The speech rate used by NoiseTagging&rsquo;s text-to-speech system.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV15disableNoClicksSSvpZ":{"name":"disableNoClicks","abstract":"<p>Whether to disable &lsquo;no-clicks&rsquo;.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV06assignA19TagsInReversedOrderSSvpZ":{"name":"assignNoiseTagsInReversedOrder","abstract":"<p>Whether to assign noise tags to controls in reversed order.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV017randomlyTranslateA14TagsInTrainingSSvpZ":{"name":"randomlyTranslateNoiseTagsInTraining","abstract":"<p>In subsequent calibration trials we use noise tag x, then noise tag x+1, etcetera. If this setting is false, x=0, otherwise it is chosen randomly.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV19timeInBetweenTrialsSSvpZ":{"name":"timeInBetweenTrials","abstract":"<p>The time before the flickering starts again after a press.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV25certaintyRequiredForPressSSvpZ":{"name":"certaintyRequiredForPress","abstract":"<p>How certain we want to be that the user is looking at a particular control before we press it.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV24trialDurationSimpleTrainSSvpZ":{"name":"trialDurationSimpleTrain","abstract":"<p>The duration that we make a control flicker in each trial, during Simple Calibration.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV25trialDurationGenericTrainSSvpZ":{"name":"trialDurationGenericTrain","abstract":"<p>The duration that we make a control flicker in each trial, during Generic Calibration.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV16minTrialDurationSSvpZ":{"name":"minTrialDuration","abstract":"<p>The minimal duration of a trial before we may brain-press a control.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV20maxTestTrialDurationSSvpZ":{"name":"maxTestTrialDuration","abstract":"<p>The maximum duration of a trial.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV27disableMaxTestTrialDurationSSvpZ":{"name":"disableMaxTestTrialDuration","abstract":"<p>Whether to allow endless trials. If this is <code>true</code>, a trial can only end by a control being pressed.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV18nSimpleTrainTrialsSSvpZ":{"name":"nSimpleTrainTrials","abstract":"<p>Number of trials used for a round of Simple Calibration.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV19nGenericTrainTrialsSSvpZ":{"name":"nGenericTrainTrials","abstract":"<p>Number of trials used for a round of Generic Calibration.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV29defaultBackgroundColorPrimarySSvpZ":{"name":"defaultBackgroundColorPrimary","abstract":"<p>The default primary background color.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV38defaultBackgroundColorTopAndBottomBarsSSvpZ":{"name":"defaultBackgroundColorTopAndBottomBars","abstract":"<p>The default background color in top and bottom bars. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV29defaultBackgroundColorPrimarySSvpZ\">defaultBackgroundColorPrimary</a></code>.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV36defaultBackgroundColorTreeNavigationSSvpZ":{"name":"defaultBackgroundColorTreeNavigation","abstract":"<p>The default background color in tree navigation UI. See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV29defaultBackgroundColorPrimarySSvpZ\">defaultBackgroundColorPrimary</a></code>.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV25defaultColorButtonEnabledSSvpZ":{"name":"defaultColorButtonEnabled","abstract":"<p>The default color of controls when they are enabled and not flickering.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV26defaultColorButtonDisabledSSvpZ":{"name":"defaultColorButtonDisabled","abstract":"<p>The default color of controls when they are disabled.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV36defaultColorItemsOnPrimaryBackgroundSSvpZ":{"name":"defaultColorItemsOnPrimaryBackground","abstract":"<p>The default color of non-controls, such as labels, that are shown alongside controls on the primary background color.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV35defaultColorItemsOnTopAndBottomBarsSSvpZ":{"name":"defaultColorItemsOnTopAndBottomBars","abstract":"<p>The default color of non-controls, such as labels, that are shown alongside controls inside top or bottom bars.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV33defaultColorItemsInTreeNavigationSSvpZ":{"name":"defaultColorItemsInTreeNavigation","abstract":"<p>The default color of non-controls, such as labels, that are shown alongside controls inside tree navigation UI.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV29colorButtonNotPressedFeedbackSSvpZ":{"name":"colorButtonNotPressedFeedback","abstract":"<p>Depending on the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV17clickFeedbackModeSSvpZ\">clickFeedbackMode</a></code>, at the end of each trial the controls that have <em>not</em> been pressed may temporarily change to this color.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV26defaultColorItemsOnButtonsSSvpZ":{"name":"defaultColorItemsOnButtons","abstract":"<p>The default color of stuff displayed on top of controls.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV24colorBitOffIfMaxContrastSSvpZ":{"name":"colorBitOffIfMaxContrast","abstract":"<p>The &lsquo;off-color&rsquo; of flickering controls.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV23colorBitOnIfMaxContrastSSvpZ":{"name":"colorBitOnIfMaxContrast","abstract":"<p>The &lsquo;on-color&rsquo; of flickering controls.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV32autoDiscoverHostAddressUsingSSDPSSvpZ":{"name":"autoDiscoverHostAddressUsingSSDP","abstract":"<p>Whether we use SSDP to automatically discover the ip address of the MA Decoder.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV14hostAddressTCPSSvpZ":{"name":"hostAddressTCP","abstract":"<p>The ip address of the MA Decoder we connect to.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV7portTCPSSvpZ":{"name":"portTCP","abstract":"<p>The port over which we connect with the MA Decoder.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV14autoConnectTCPSSvpZ":{"name":"autoConnectTCP","abstract":"<p>Whether we automatically try to connect with the MA Decoder.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV24timeoutConnectingOverTCPSSvpZ":{"name":"timeoutConnectingOverTCP","abstract":"<p>The applied time-out interval when trying to connect with the MA Decoder.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV30timeInBetweenAttemptsToConnectSSvpZ":{"name":"timeInBetweenAttemptsToConnect","abstract":"<p>After each attempt to connect to the MA Decoder we wait a bit, as defined by this setting, and then try again.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV39durationAutoConnectTCPBeforeWarningUserSSvpZ":{"name":"durationAutoConnectTCPBeforeWarningUser","abstract":"<p>If we do not manage to connect to the MA Decoder for the duration as defined by this setting, we warn the user using an alert.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV18soundOnMissedFrameSSvpZ":{"name":"soundOnMissedFrame","abstract":"<p>Whether to play a sound whenever a frame is dropped while the controls are flickering.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV17clickFeedbackModeSSvpZ":{"name":"clickFeedbackMode","abstract":"<p>Determines the kind of feedback that is provided whenever a control is pressed.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV39certaintyRequiredForFirstZeroTrainClickSSvpZ":{"name":"certaintyRequiredForFirstZeroTrainClick","abstract":"<p>In zero-train mode, the certainty that is required for performing the first press.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV30maxDurationFirstZeroTrainClickSSvpZ":{"name":"maxDurationFirstZeroTrainClick","abstract":"<p>In zero-train mode, the maximum duration of the first press.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV16nZeroTrainTrialsSSvpZ":{"name":"nZeroTrainTrials","abstract":"<p>In zero-train mode, the number of trials in which calibration takes place.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV21hideNonTargetControlsSSvpZ":{"name":"hideNonTargetControls","abstract":"<p>During Generic Calibration, whether the controls that are <em>not</em> the target should be hidden.</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV27soundAlarmWhenDisconnectingSSvpZ":{"name":"soundAlarmWhenDisconnecting","abstract":"<p>Whether an alarm sound should be played whenever we disconnect from the MA Decoder (unless the user disconnects deliberately).</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV33sayOutLoudWhenSendingModeToUtopiaSSvpZ":{"name":"sayOutLoudWhenSendingModeToUtopia","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV15ttsFailedClicksSSvpZ":{"name":"ttsFailedClicks","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV014playSoundAfteraB2OnSSvpZ":{"name":"playSoundAfterNoiseTaggingOn","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV022intervalPlaySoundAfteraB2OnSSvpZ":{"name":"intervalPlaySoundAfterNoiseTaggingOn","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagSettingTitles"},"Structs/NoiseTagSettingTitles.html#/s:12NoiseTagging0A16TagSettingTitlesV31labeledButtonsOnlyPartlyFlickerSSvpZ":{"name":"labeledButtonsOnlyPartlyFlicker","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagSettingTitles"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC8settingsSayAA7Setting_pGvp":{"name":"settings","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC11displayNameSSvp":{"name":"displayName","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC011nNonDefaultE0Sivp":{"name":"nNonDefaultSettings","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/c:@M@NoiseTagging@objc(cs)SetOfSettings(im)init":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/c:@M@NoiseTagging@objc(cs)SetOfSettings(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/c:@M@NoiseTagging@objc(cs)SetOfSettings(im)encodeWithCoder:":{"name":"encode(with:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/c:@M@NoiseTagging@objc(cs)SetOfSettings(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC9subscribe_02toE9WithTitleyAA17SettingSubscriber_p_SStF":{"name":"subscribe(_:toSettingsWithTitle:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC9subscribe_02toE10WithTitlesyAA17SettingSubscriber_p_SaySSGtF":{"name":"subscribe(_:toSettingsWithTitles:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC30informSubscribersToSettingWith12settingTitleySS_tF":{"name":"informSubscribersToSettingWith(settingTitle:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC3add7settingyAA7Setting_p_tF":{"name":"add(setting:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC6insert7setting2atyAA7Setting_p_SitF":{"name":"insert(setting:at:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC12addByReplace7settingyAA7Setting_p_tF":{"name":"addByReplace(setting:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC15addNewGroupWith5titleySS_tF":{"name":"addNewGroupWith(title:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC15deleteSettingAt5indexySi_tF":{"name":"deleteSettingAt(index:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC17deleteSettingWith5titleySS_tF":{"name":"deleteSettingWith(title:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC11settingWith5title13caseSensitiveAA7Setting_pSgSS_SbtF":{"name":"settingWith(title:caseSensitive:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC12settingsWith6titlesSayAA7Setting_pGSaySSG_tF":{"name":"settingsWith(titles:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC7boolForySbSSF":{"name":"boolFor(_:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC3set5value3forySb_SStF":{"name":"set(value:for:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC17toggleSettingWith5titleySS_tF":{"name":"toggleSettingWith(title:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC6intForySiSSF":{"name":"intFor(_:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC3set5value3forySi_SStF":{"name":"set(value:for:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC9doubleForySdSSF":{"name":"doubleFor(_:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC10cgFloatFory12CoreGraphics7CGFloatVSSF":{"name":"cgFloatFor(_:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC3set5value3forySd_SStF":{"name":"set(value:for:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC3set5value3forySS_SStF":{"name":"set(value:for:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC32indexSelectionForEnumSettingWith5titleSiSS_tF":{"name":"indexSelectionForEnumSettingWith(title:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC26selectedEnumForSettingWith5titleAA0g2AsI0_pSgSS_tF":{"name":"selectedEnumForSettingWith(title:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC3set9enumValue3foryAA13EnumAsSetting_p_SStF":{"name":"set(enumValue:for:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC021indexSelectionForItemD16ArraySettingWith5titleSiSS_tF":{"name":"indexSelectionForItemOfArraySettingWith(title:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC012selectedItemD8ArrayFor5titleAA0gdH6InMenu_pSgSS_tF":{"name":"selectedItemOfArrayFor(title:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC3set04itemD5Array3foryAA04ItemdH6InMenu_p_SStF":{"name":"set(itemOfArray:for:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC8colorFor5titleSo7UIColorCSS_tF":{"name":"colorFor(title:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC7textFor5titleS2S_tF":{"name":"textFor(title:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC012takeOnValuesD003setdE0yAC_tF":{"name":"takeOnValuesOf(setOfSettings:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/s:12NoiseTagging13SetOfSettingsC44settingsShouldPerformActionsWhenValueChangesSbvpZ":{"name":"settingsShouldPerformActionsWhenValueChanges","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettings"},"Classes/SetOfSettings.html#/c:@M@NoiseTagging@objc(pl)SettingObserver(im)valueChangedForSetting:":{"name":"valueChangedFor(setting:)","parent_name":"SetOfSettings"},"Classes/NoiseTagSetOfSettings.html#/c:@M@NoiseTagging@objc(cs)NoiseTagSetOfSettings(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagSetOfSettings"},"Classes/NoiseTagSetOfSettings.html#/c:@M@NoiseTagging@objc(cs)NoiseTagSetOfSettings(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagSetOfSettings"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)title":{"name":"title","abstract":"<p>The setting&rsquo;s title, as displayed in the UI.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)isEditable":{"name":"isEditable","abstract":"<p>Whether the settings is editable by the user.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)isVisibleInUI":{"name":"isVisibleInUI","abstract":"<p>If the setting is part of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SetOfSettings.html\">SetOfSettings</a></code> and UI is displayed to edit that set, this determines whether the setting is also visible in the UI.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)help":{"name":"help","abstract":"<p>An explanation for the user about what the setting  exactly is about.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)observers":{"name":"observers","abstract":"<p>A setting&rsquo;s observers are informed whenever the setting&rsquo;s value changes.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(im)addWithObserver:":{"name":"add(observer:)","abstract":"<p>Add a new observer, which is informed whenever the setting&rsquo;s value changes.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(im)removeWithObserver:":{"name":"remove(observer:)","abstract":"<p>Remove an observer, so it is no longer informed whenever the setting&rsquo;s value changes.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)valueAsJson":{"name":"valueAsJson","abstract":"<p>The setting&rsquo;s value described using JSON. Used for logging purposes.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)descriptionValueIfDefined":{"name":"descriptionValueIfDefined","abstract":"<p>A description of the setting&rsquo;s value, assuming a value is defined. Used for logging purposes.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)descriptionValue":{"name":"descriptionValue","abstract":"<p>A description of the setting&rsquo;s value, be it defined or undefined. Used for logging purposes.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(im)updateValueToMatchWithNewSetting:":{"name":"updateValueToMatch(newSetting:)","abstract":"<p>Sets the receiver&rsquo;s setting value to the setting value of <code>newSetting</code>.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)hasDefaultValue":{"name":"hasDefaultValue","abstract":"<p>Settings may have a default value, which can easily be restored by the user using the standard UI for editing settings provided by the NoiseTagging framework.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(im)resetToDefault":{"name":"resetToDefault()","abstract":"<p>Set the setting value to the default value.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)cellNibName":{"name":"cellNibName","abstract":"<p>The name of the nib used for generating UI for editing the setting.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)cellReuseIdentifier":{"name":"cellReuseIdentifier","abstract":"<p>The NoiseTagging framework provides standard UI for editing settings. This UI consists of a table view, where each cell is used for one setting. The <code>cellReuseIdentifier</code> makes it possible to reuse these cells per setting type.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)validityCheck":{"name":"validityCheck","abstract":"<p>A closure which checks whether a certain value is a valid value for the setting.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)actionBeforeChange":{"name":"actionBeforeChange","abstract":"<p>An optional closures that is executed just before changing the setting&rsquo;s value:</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)actionAfterChange":{"name":"actionAfterChange","abstract":"<p>An optional closures that is executed just after changing the setting&rsquo;s value:</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)allowsUndefined":{"name":"allowsUndefined","abstract":"<p>Whether the setting allows to be undefined.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)isUndefined":{"name":"isUndefined","abstract":"<p>Whether the setting is &lsquo;undefined&rsquo;. Only relevant if <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(py)allowsUndefined\">allowsUndefined</a></code> is <code>true</code>.</p>","parent_name":"Setting"},"Protocols/Setting.html#/c:@M@NoiseTagging@objc(pl)Setting(im)setToUndefined":{"name":"setToUndefined()","abstract":"<p>Set the setting value to <code>undefined</code>.</p>","parent_name":"Setting"},"Protocols/Setting.html":{"name":"Setting","abstract":"<p>Objects conforming to this protocol can be used as <em>Settings</em>. This a.o. means they have a value that can be set and get, and that the NoiseTagging framework can provide the user with UI to edit the setting.</p>"},"Classes/NoiseTagSetOfSettings.html":{"name":"NoiseTagSetOfSettings","abstract":"<p>Used for modeling NoiseTagController&rsquo;s settings. Note that this class does <em>not</em> control which specific settings are added to it. To get an overview of the settings that NoiseTagController uses, see <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/NoiseTagSettingTitles.html\">NoiseTagSettingTitles</a></code>.</p>"},"Classes/SetOfSettings.html":{"name":"SetOfSettings","abstract":"<p>Undocumented</p>"},"Structs/NoiseTagSettingTitles.html":{"name":"NoiseTagSettingTitles","abstract":"<p>Struct containing titles of settings used by the NoiseTagging framework.</p>"},"Classes/BoolSetting.html":{"name":"BoolSetting","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html\">Setting</a></code> with a <code>Bool</code> value.</p>"},"Classes/IntSetting.html":{"name":"IntSetting","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html\">Setting</a></code> with an <code>Int</code> value.</p>"},"Classes/DoubleSetting.html":{"name":"DoubleSetting","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html\">Setting</a></code> with a <code>Double</code> value.</p>"},"Classes/TextSetting.html":{"name":"TextSetting","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html\">Setting</a></code> with a <code>String</code> value.</p>"},"Classes/EnumSetting.html":{"name":"EnumSetting","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html\">Setting</a></code> with a <code>EnumAsSettingProtocol</code> value.</p>"},"Protocols/EnumAsSetting.html":{"name":"EnumAsSetting","abstract":"<p>Enums that implement <code>EnumAsSettingProtocol</code> can be used as values for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/EnumSetting.html\">EnumSetting</a></code>.</p>"},"Classes/ItemOfArraySetting.html":{"name":"ItemOfArraySetting","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html\">Setting</a></code> which models an array of possible values and one of those values being selected.</p>"},"Protocols/ItemOfArrayInMenu.html":{"name":"ItemOfArrayInMenu","abstract":"<p>By conforming to this protocol, the NoiseTagging framework can display objects in a menu, letting the user select one of multiple objects. This protocol is also used for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ItemOfArraySetting.html\">ItemOfArraySetting</a></code>.</p>"},"Classes/ColorSetting.html":{"name":"ColorSetting","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html\">Setting</a></code> with a color value.</p>"},"Classes/PickableColor.html":{"name":"PickableColor","abstract":"<p>A <code>PickableColor</code> models a color that can be selected as a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ColorSetting.html\">ColorSetting</a></code>&lsquo;s current value.</p>"},"Settings.html#/c:@M@NoiseTagging@objc(cs)ResultValidityCheck":{"name":"ResultValidityCheck","abstract":"<p>Undocumented</p>"},"Classes/Setting_abstract.html":{"name":"Setting_abstract","abstract":"<p>Setting classes can subclass this abstract class to more easily implement the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html\">Setting</a></code> protocol.</p>"},"Protocols/SettingObserver.html":{"name":"SettingObserver","abstract":"<p>Each <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Setting.html\">Setting</a></code> can have one or more observers, which are informed whenever the setting changes value.</p>"},"Protocols/SettingSubscriber.html":{"name":"SettingSubscriber","abstract":"<p>Undocumented</p>"},"Enums/LettersLayoutType.html#/s:12NoiseTagging17LettersLayoutTypeO3ABCyA2CmF":{"name":"ABC","abstract":"<p>Buttons are ordered alphabetically.</p>","parent_name":"LettersLayoutType"},"Enums/LettersLayoutType.html#/s:12NoiseTagging17LettersLayoutTypeO6QWERTYyA2CmF":{"name":"QWERTY","abstract":"<p>Button layout is QWERTY.</p>","parent_name":"LettersLayoutType"},"Enums/LettersLayoutType.html#/s:12NoiseTagging17LettersLayoutTypeO11displayNameSSvp":{"name":"displayName","abstract":"<p>A user-friendly description of the case.</p>","parent_name":"LettersLayoutType"},"Enums/StandardCustomizableKeyboardButton.html#/s:12NoiseTagging34StandardCustomizableKeyboardButtonO17SpecialCharactersyA2CmF":{"name":"SpecialCharacters","abstract":"<p>A button which can be used to type special characters such as &ldquo;.&rdquo; or &ldquo;,&rdquo;.</p>","parent_name":"StandardCustomizableKeyboardButton"},"Enums/StandardCustomizableKeyboardButton.html#/s:12NoiseTagging34StandardCustomizableKeyboardButtonO14SpeakOutOrUndoyA2CmF":{"name":"SpeakOutOrUndo","abstract":"<p>A button which can be used to speak out loud the entered text, or if the text has just been deleted, undo that.</p>","parent_name":"StandardCustomizableKeyboardButton"},"Enums/StandardCustomizableKeyboardButton.html#/s:12NoiseTagging34StandardCustomizableKeyboardButtonO5ReadyyA2CmF":{"name":"Ready","abstract":"<p>A button which can be used to stop editing the text.</p>","parent_name":"StandardCustomizableKeyboardButton"},"Enums/CustomizableButtonState.html#/s:12NoiseTagging23CustomizableButtonStateO8standardyAcA08Standardc8KeyboardD0OcACmF":{"name":"standard(_:)","abstract":"<p>One of the standard buttons, as defined by <code>StandardCustomizableButton</code>.</p>","parent_name":"CustomizableButtonState"},"Enums/CustomizableButtonState.html#/s:12NoiseTagging23CustomizableButtonStateO6customyACSo6UIViewC_SStcACmF":{"name":"custom(view:idInKeyboard:)","abstract":"<p>A custom button, which is defined by a view and an identifier.</p>","parent_name":"CustomizableButtonState"},"Enums/CustomizableButtonState.html#/s:12NoiseTagging23CustomizableButtonStateO2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Whether two <code>CustomizableButtonState</code> cases are equal.</p>","parent_name":"CustomizableButtonState"},"Structs/NoiseTagKeyboardSettingTitles.html#/s:12NoiseTagging0A24TagKeyboardSettingTitlesV14keyboardLayoutSSvpZ":{"name":"keyboardLayout","abstract":"<p>What keyboard layout to use, as defined by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/LettersLayoutType.html\">LettersLayoutType</a></code>.</p>","parent_name":"NoiseTagKeyboardSettingTitles"},"Structs/NoiseTagKeyboardSettingTitles.html#/s:12NoiseTagging0A24TagKeyboardSettingTitlesV16autoCompleteModeSSvpZ":{"name":"autoCompleteMode","abstract":"<p>What auto complete mode to use, as defined by <code>AutoCompleteMode</code>.</p>","parent_name":"NoiseTagKeyboardSettingTitles"},"Structs/NoiseTagKeyboardSettingTitles.html#/s:12NoiseTagging0A24TagKeyboardSettingTitlesV7ttsModeSSvpZ":{"name":"ttsMode","abstract":"<p>What text to speech mode to use, as defined by <code>SpeakOutLoudMode</code>.</p>","parent_name":"NoiseTagKeyboardSettingTitles"},"Structs/NoiseTagKeyboardSettingTitles.html#/s:12NoiseTagging0A24TagKeyboardSettingTitlesV26languageCodeWordCompletionSSvpZ":{"name":"languageCodeWordCompletion","abstract":"<p>What language to use for word completion.</p>","parent_name":"NoiseTagKeyboardSettingTitles"},"Structs/NoiseTagKeyboardSettingTitles.html#/s:12NoiseTagging0A24TagKeyboardSettingTitlesV063whenAcceptingWordCompletionsOnSpaceOnlySuggestIfCurrentTextIsNoI0SSvpZ":{"name":"whenAcceptingWordCompletionsOnSpaceOnlySuggestIfCurrentTextIsNoWord","abstract":"<p>Whether to allow word completion by typing a space when a valid word already has been typed.</p>","parent_name":"NoiseTagKeyboardSettingTitles"},"Classes/SetOfSettingsNoiseTagKeyboard.html#/c:@M@NoiseTagging@objc(cs)SetOfSettingsNoiseTagKeyboard(im)copyWithZone:":{"name":"copy(with:)","abstract":"<p>Undocumented</p>","parent_name":"SetOfSettingsNoiseTagKeyboard"},"Protocols/NoiseTaggingKeyboardDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTaggingKeyboardDelegate(im)customActionOnPressOnKeyWithIdInKeyboard:":{"name":"customActionOnPressOnKeyWith(idInKeyboard:)","abstract":"<p>todo</p>","parent_name":"NoiseTaggingKeyboardDelegate"},"Protocols/NoiseTaggingKeyboardDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTaggingKeyboardDelegate(im)readyButtonPressedInKeyboard":{"name":"readyButtonPressedInKeyboard()","abstract":"<p>Called when the user presses the keyboard&rsquo;s Ready button. Normally the delegate should dismiss the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagKeyboardViewController.html\">NoiseTagKeyboardViewController</a></code>.</p>","parent_name":"NoiseTaggingKeyboardDelegate"},"Classes/NoiseTagKeyboardViewController.html#/c:@M@NoiseTagging@objc(cs)NoiseTagKeyboardViewController(im)init":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/s:12NoiseTagging0A25TagKeyboardViewControllerC8delegateAA0abD8Delegate_pSgvp":{"name":"delegate","abstract":"<p>The delegate can respond to button presses. It is also responsible for dismissing the keyboard when the Ready button is pressed.</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/s:12NoiseTagging0A25TagKeyboardViewControllerC24customizableButtonStatesSayAA012CustomizableH5StateOGvp":{"name":"customizableButtonStates","abstract":"<p>1, 2, or 3 buttons that are displayed in the customizable area of the keyboard.</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/s:12NoiseTagging0A25TagKeyboardViewControllerC16smartTextEditingSbvp":{"name":"smartTextEditing","abstract":"<p>Whether smart editing should be enable.</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/s:12NoiseTagging0A25TagKeyboardViewControllerC8settingsAA013SetOfSettingsacD0CvpZ":{"name":"settings","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/s:12NoiseTagging0A25TagKeyboardViewControllerC9typedTextSSvp":{"name":"typedText","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/c:@M@NoiseTagging@objc(cs)NoiseTagKeyboardViewController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/c:@M@NoiseTagging@objc(cs)NoiseTagKeyboardViewController(im)viewDidAppear:":{"name":"viewDidAppear(_:)","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/c:@M@NoiseTagging@objc(cs)NoiseTagKeyboardViewController(im)viewDidLayoutSubviews":{"name":"viewDidLayoutSubviews()","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)startNoiseTagControlOnNoiseTaggingView:":{"name":"startNoiseTagControlOn(noiseTaggingView:)","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)respondToNoiseTagModeChange":{"name":"respondToNoiseTagModeChange()","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/s:12NoiseTagging0A25TagKeyboardViewControllerC14valueChangedOf7setting5inSetyAA7Setting_p_AA0lI8SettingsCtF":{"name":"valueChangedOf(setting:inSet:)","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/c:@M@NoiseTagging@objc(cs)NoiseTagKeyboardViewController(im)didReceiveMemoryWarning":{"name":"didReceiveMemoryWarning()","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html#/c:@M@NoiseTagging@objc(cs)NoiseTagKeyboardViewController(py)prefersStatusBarHidden":{"name":"prefersStatusBarHidden","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagKeyboardViewController"},"Classes/NoiseTagKeyboardViewController.html":{"name":"NoiseTagKeyboardViewController","abstract":"<p>A view controller which presents a brain-controllable keyboard.</p>"},"Protocols/NoiseTaggingKeyboardDelegate.html":{"name":"NoiseTaggingKeyboardDelegate","abstract":"<p>Protocol for the delegate of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagKeyboardViewController.html\">NoiseTagKeyboardViewController</a></code>.</p>"},"Classes/SetOfSettingsNoiseTagKeyboard.html":{"name":"SetOfSettingsNoiseTagKeyboard","abstract":"<p>Used to define settings for a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagKeyboardViewController.html\">NoiseTagKeyboardViewController</a></code>.</p>"},"Structs/NoiseTagKeyboardSettingTitles.html":{"name":"NoiseTagKeyboardSettingTitles","abstract":"<p>Titles used for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SetOfSettingsNoiseTagKeyboard.html\">SetOfSettingsNoiseTagKeyboard</a></code>.</p>"},"Enums/CustomizableButtonState.html":{"name":"CustomizableButtonState","abstract":"<p>Enum defining the possible buttons that can be used to customize the keyboard of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagKeyboardViewController.html\">NoiseTagKeyboardViewController</a></code>.</p>"},"Enums/StandardCustomizableKeyboardButton.html":{"name":"StandardCustomizableKeyboardButton","abstract":"<p>Enum defining the different standard buttons that can be used to customize the keyboard of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagKeyboardViewController.html\">NoiseTagKeyboardViewController</a></code>.</p>"},"Enums/LettersLayoutType.html":{"name":"LettersLayoutType","abstract":"<p>Possible keyboard layouts.</p>"},"Classes/NoiseTagPopupItem.html#/s:12NoiseTagging0A12TagPopupItemC5titleSSvp":{"name":"title","abstract":"<p>The item&rsquo;s title.</p>","parent_name":"NoiseTagPopupItem"},"Classes/NoiseTagPopupItem.html#/s:12NoiseTagging0A12TagPopupItemC8subTitleSSSgvp":{"name":"subTitle","abstract":"<p>An optional subtitle.</p>","parent_name":"NoiseTagPopupItem"},"Classes/NoiseTagPopupItem.html#/s:12NoiseTagging0A12TagPopupItemC5imageSo7UIImageCSgvp":{"name":"image","abstract":"<p>An optional image displayed next to the title.</p>","parent_name":"NoiseTagPopupItem"},"Classes/NoiseTagPopupItem.html#/s:12NoiseTagging0A12TagPopupItemC15associatedValueypSgvp":{"name":"associatedValue","abstract":"<p>An optional value associated with the item.</p>","parent_name":"NoiseTagPopupItem"},"Classes/NoiseTagPopupItem.html#/s:12NoiseTagging0A12TagPopupItemC5title5image15associatedValueACSS_So7UIImageCSgypSgtcfc":{"name":"init(title:image:associatedValue:)","abstract":"<p>Initialize a new <code>NoiseTagPopupItem</code>, with the passed <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagPopupItem.html#/s:12NoiseTagging0A12TagPopupItemC5titleSSvp\">title</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagPopupItem.html#/s:12NoiseTagging0A12TagPopupItemC5imageSo7UIImageCSgvp\">image</a></code>, and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagPopupItem.html#/s:12NoiseTagging0A12TagPopupItemC15associatedValueypSgvp\">associatedValue</a></code>.</p>","parent_name":"NoiseTagPopupItem"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC5itemsSayAA0acD4ItemCGvp":{"name":"items","abstract":"<p>The possible items that the user can select.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC17indexSelectedItemSivp":{"name":"indexSelectedItem","abstract":"<p>The index of the selected item.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC12isHorizontalSbvp":{"name":"isHorizontal","abstract":"<p>Whether the items are presented horizontally instead of vertically.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC05noiseC11ControlIsOnSbvp":{"name":"noiseTagControlIsOn","abstract":"<p>Whether noise tagging control is currently enabled.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC30closureToHandleSelectionOfItemyAA0acdL0CcSgvp":{"name":"closureToHandleSelectionOfItem","abstract":"<p>This closure is executed whenever the user selects an item. The closure is passed the selected item.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC9fontItemsSo6UIFontCvp":{"name":"fontItems","abstract":"<p>The font used for displaying the item titles.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC5titleSSSgvp":{"name":"title","abstract":"<p>This function overrides <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagLabeledButtonView.html\">NoiseTagLabeledButtonView</a></code>&lsquo;s implementation, only to print a warning that this can better not be used directly. Instead you should set <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC5itemsSayAA0acD4ItemCGvp\">items</a></code>, and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC17indexSelectedItemSivp\">indexSelectedItem</a></code> or <code>selectedItem</code>.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC5frame13locationLabelACSo6CGRectV_AA0ac7LabeledeF0C08LocationI0Otcfc":{"name":"init(frame:locationLabel:)","abstract":"<p>Initialize a new <code>NoiseTagPopupButtonView</code>, given the passed <code>frame</code> and <code>locationLabel</code>.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagPopupButtonView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize a new <code>NoiseTagPopupButtonView</code> from the passed <code>coder</code>.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC11showPopoveryyF":{"name":"showPopover()","abstract":"<p>Show the popover in which the user can choose which item to select.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC29selectItemWithAssociatedValue5valueyx_tSQRzlF":{"name":"selectItemWithAssociatedValue(value:)","abstract":"<p>Each item (<code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagPopupItem.html\">NoiseTagPopupItem</a></code>) may have an <em>associated value</em>, which is of any type. Select the item with the passed associated value.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagPopupButtonView(im)startNoiseTagControlOnNoiseTaggingView:":{"name":"startNoiseTagControlOn(noiseTaggingView:)","abstract":"<p>When a <code>NoiseTagPopupButtonView</code>, it presents a popover and pushes a new unit on the noise tagging stack. It becomes this unit&rsquo;s delegate. In this <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseTagDelegate.html\">NoiseTagDelegate</a></code> function is prepare the popover&rsquo;s contents for noise tagging control.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/s:12NoiseTagging0A18TagPopupButtonViewC7present14viewControllerySo06UIViewI0C_tF":{"name":"present(viewController:)","abstract":"<p>todo</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagPopupButtonView(im)popoverPresentationControllerShouldDismissPopover:":{"name":"popoverPresentationControllerShouldDismissPopover(_:)","abstract":"<p>See <code>UIPopoverPresentationControllerDelegate</code>.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagPopupButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagPopupButtonView(im)popoverPresentationControllerDidDismissPopover:":{"name":"popoverPresentationControllerDidDismissPopover(_:)","abstract":"<p>See <code>UIPopoverPresentationControllerDelegate</code>.</p>","parent_name":"NoiseTagPopupButtonView"},"Classes/NoiseTagRadioButton.html#/s:12NoiseTagging0A14TagRadioButtonC4isOnSbvp":{"name":"isOn","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagRadioButton"},"Classes/NoiseTagCheckBoxView.html#/s:12NoiseTagging0A15TagCheckBoxViewC4isOnSbvp":{"name":"isOn","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagCheckBoxView"},"Classes/NoiseTagCheckBoxView.html#/s:12NoiseTagging0A15TagCheckBoxViewC6prefixSSvp":{"name":"prefix","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagCheckBoxView"},"Classes/NoiseTagCheckBoxView.html#/s:12NoiseTagging0A15TagCheckBoxViewC6suffixSSvp":{"name":"suffix","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagCheckBoxView"},"Classes/NoiseTagLabeledButtonView/LocationLabel.html#/s:12NoiseTagging0A20TagLabeledButtonViewC13LocationLabelO5RightyA2EmF":{"name":"Right","abstract":"<p>Undocumented</p>","parent_name":"LocationLabel"},"Classes/NoiseTagLabeledButtonView/LocationLabel.html#/s:12NoiseTagging0A20TagLabeledButtonViewC13LocationLabelO3TopyA2EmF":{"name":"Top","abstract":"<p>Undocumented</p>","parent_name":"LocationLabel"},"Classes/NoiseTagLabeledButtonView/LocationLabel.html#/s:12NoiseTagging0A20TagLabeledButtonViewC13LocationLabelO6BottomyA2EmF":{"name":"Bottom","abstract":"<p>Undocumented</p>","parent_name":"LocationLabel"},"Classes/NoiseTagLabeledButtonView/LocationLabel.html":{"name":"LocationLabel","abstract":"<p>The location of the label of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagLabeledButtonView.html\">NoiseTagLabeledButtonView</a></code>.</p>","parent_name":"NoiseTagLabeledButtonView"},"Classes/NoiseTagLabeledButtonView.html#/s:12NoiseTagging0A20TagLabeledButtonViewC5frame13locationLabelACSo6CGRectV_AC08LocationI0Otcfc":{"name":"init(frame:locationLabel:)","abstract":"<p>Initialize using the passed <code>frame</code> and <code>locationLabel</code>.</p>","parent_name":"NoiseTagLabeledButtonView"},"Classes/NoiseTagLabeledButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagLabeledButtonView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize from the passed <code>NSCoder</code>.</p>","parent_name":"NoiseTagLabeledButtonView"},"Classes/NoiseTagLabeledButtonView.html#/s:12NoiseTagging0A20TagLabeledButtonViewC5titleSSSgvp":{"name":"title","abstract":"<p>The title displayed on top of the button.</p>","parent_name":"NoiseTagLabeledButtonView"},"Classes/NoiseTagLabeledButtonView.html#/s:12NoiseTagging0A20TagLabeledButtonViewC8subTitleSSSgvp":{"name":"subTitle","abstract":"<p>The subtitle displayed on top of the button.</p>","parent_name":"NoiseTagLabeledButtonView"},"Classes/NoiseTagLabeledButtonView.html#/s:12NoiseTagging0A20TagLabeledButtonViewC5imageSo7UIImageCSgvp":{"name":"image","abstract":"<p>The image displayed on top of the button.</p>","parent_name":"NoiseTagLabeledButtonView"},"Classes/NoiseTagLabeledButtonView.html#/s:12NoiseTagging0A20TagLabeledButtonViewC4fontSo6UIFontCvp":{"name":"font","abstract":"<p>The font of the title displayed on top of the button.</p>","parent_name":"NoiseTagLabeledButtonView"},"Classes/NoiseTagLabeledButtonView.html#/s:12NoiseTagging0A20TagLabeledButtonViewC13textAlignmentSo06NSTextH0Vvp":{"name":"textAlignment","abstract":"<p>The text  alignment of the title displayed on top of the button.</p>","parent_name":"NoiseTagLabeledButtonView"},"Classes/NoiseTagLabeledButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagLabeledButtonView(im)showWithAppearance:withDefaultColor:":{"name":"show(appearance:withDefaultColor:)","abstract":"<p>Implementation of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseTagControl.html\">NoiseTagControl</a></code>&lsquo;s <code>setFlickerColor(color)</code> function.</p>","parent_name":"NoiseTagLabeledButtonView"},"Classes/NoiseTagLabeledButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagLabeledButtonView(im)updateUIDependingOnNoiseTagging":{"name":"updateUIDependingOnNoiseTagging()","abstract":"<p>We override this in order to hide the line that divides our two parts  when flickering is on.</p>","parent_name":"NoiseTagLabeledButtonView"},"Classes/NoiseTagShapeButtonView.html#/s:12NoiseTagging0A18TagShapeButtonViewC4pathSo9CGPathRefaSgvp":{"name":"path","abstract":"<p>The path defining our shape.</p>","parent_name":"NoiseTagShapeButtonView"},"Classes/NoiseTagShapeButtonView.html#/s:12NoiseTagging0A18TagShapeButtonViewC5colorSo7UIColorCSgvp":{"name":"color","abstract":"<p>Our color if we are not flickering.</p>","parent_name":"NoiseTagShapeButtonView"},"Classes/NoiseTagShapeButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagShapeButtonView(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initialize using the passed <code>frame</code>.</p>","parent_name":"NoiseTagShapeButtonView"},"Classes/NoiseTagShapeButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagShapeButtonView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize from the passed <code>NSCoder</code>.</p>","parent_name":"NoiseTagShapeButtonView"},"Classes/NoiseTagShapeButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagShapeButtonView(im)layerToHandleNoiseTagTaps":{"name":"layerToHandleNoiseTagTaps()","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseTagControl.html\">NoiseTagControl</a></code>.</p>","parent_name":"NoiseTagShapeButtonView"},"Classes/NoiseTagShapeButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagShapeButtonView(im)showWithAppearance:withDefaultColor:":{"name":"show(appearance:withDefaultColor:)","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseTagControl.html\">NoiseTagControl</a></code>.</p>","parent_name":"NoiseTagShapeButtonView"},"Classes/NoiseTagShapeButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagShapeButtonView(im)noiseTagControlIsEnabled_didChangeValue":{"name":"noiseTagControlIsEnabled_didChangeValue()","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseTagControl.html\">NoiseTagControl</a></code>.</p>","parent_name":"NoiseTagShapeButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC10titleLabelSo7UILabelCSgvp":{"name":"titleLabel","abstract":"<p>The label used to show the button&rsquo;s title.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC5titleSSSgvp":{"name":"title","abstract":"<p>The title displayed on top of the button.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC8subTitleSSSgvp":{"name":"subTitle","abstract":"<p>The subtitle displayed on top of the button.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC5imageSo7UIImageCSgvp":{"name":"image","abstract":"<p>The image displayed on top of the button.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC11imageOffsetSo8UIOffsetVvp":{"name":"imageOffset","abstract":"<p>The offset of the image displayed on top of the button.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC11fontOfTitleSo6UIFontCvp":{"name":"fontOfTitle","abstract":"<p>The font of the title displayed on top of the button.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC14fontOfSubTitleSo6UIFontCvp":{"name":"fontOfSubTitle","abstract":"<p>The font of the subtitle displayed on top of the button.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC13textAlignmentSo06NSTextG0Vvp":{"name":"textAlignment","abstract":"<p>The text  alignment of the title displayed on top of the button.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC10labelColorSo7UIColorCSgvp":{"name":"labelColor","abstract":"<p>Buttons can have a <code>label</code>, which is a colored circle displayed on top of the button.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC10titleColorSo7UIColorCvp":{"name":"titleColor","abstract":"<p>The color of the title displayed on top of the button.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC13subTitleColorSo7UIColorCvp":{"name":"subTitleColor","abstract":"<p>The color of the subtitle displayed on top of the button.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagButtonView(im)showWithAppearance:withDefaultColor:":{"name":"show(appearance:withDefaultColor:)","abstract":"<p>Implementation of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseTagControl.html\">NoiseTagControl</a></code>&lsquo;s <code>setFlickerColor(color)</code> function. We simply set the passed <code>color</code> as our layer&rsquo;s background color.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/s:12NoiseTagging0A13TagButtonViewC14valueChangedOf7setting5inSetyAA7Setting_p_AA0kH8SettingsCtF":{"name":"valueChangedOf(setting:inSet:)","abstract":"<p>In order to keep our appearance in line with changing settings, we implement <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SettingSubscriber.html\">SettingSubscriber</a></code>.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagButtonView(im)init":{"name":"init()","abstract":"<p>Initialize a new <code>NoiseTagButtonView</code>.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagButtonView(im)layoutSubviews":{"name":"layoutSubviews()","abstract":"<p>We override <code>layoutSubviews</code> to keep our layout correct whenever our <code>bounds</code> change.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagButtonView(im)initWithFrame:":{"name":"init(frame:)","abstract":"<p>Initialize using the passed <code>frame</code>.</p>","parent_name":"NoiseTagButtonView"},"Classes/NoiseTagButtonView.html#/c:@M@NoiseTagging@objc(cs)NoiseTagButtonView(im)initWithCoder:":{"name":"init(coder:)","abstract":"<p>Initialize from the passed <code>NSCoder</code>.</p>","parent_name":"NoiseTagButtonView"},"Enums/NoiseTagControlAppearance.html#/c:@M@NoiseTagging@E@NoiseTagControlAppearance@NoiseTagControlAppearanceFlicker0":{"name":"Flicker0","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagControlAppearance"},"Enums/NoiseTagControlAppearance.html#/c:@M@NoiseTagging@E@NoiseTagControlAppearance@NoiseTagControlAppearanceFlicker1":{"name":"Flicker1","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagControlAppearance"},"Enums/NoiseTagControlAppearance.html#/c:@M@NoiseTagging@E@NoiseTagControlAppearance@NoiseTagControlAppearanceEnabled":{"name":"Enabled","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagControlAppearance"},"Enums/NoiseTagControlAppearance.html#/c:@M@NoiseTagging@E@NoiseTagControlAppearance@NoiseTagControlAppearanceDisabled":{"name":"Disabled","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagControlAppearance"},"Enums/NoiseTagControlAppearance.html#/c:@M@NoiseTagging@E@NoiseTagControlAppearance@NoiseTagControlAppearanceOther":{"name":"Other","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagControlAppearance"},"Enums/NoiseTagControlAppearance.html":{"name":"NoiseTagControlAppearance","abstract":"<p>todo…</p>"},"Classes/NoiseTagButtonView.html":{"name":"NoiseTagButtonView","abstract":"<p>A button with either a title or an image.</p>"},"Classes/NoiseTagShapeButtonView.html":{"name":"NoiseTagShapeButtonView","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagButtonView.html\">NoiseTagButtonView</a></code>, but with a shape defined by a <code>CGPath</code> instead of a regular rectangle.</p>"},"Classes/NoiseTagLabeledButtonView.html":{"name":"NoiseTagLabeledButtonView","abstract":"<p>A noisetagging button consisting of two parts: a flickering part with an image, and an optionally non-flickering part with a title.</p>"},"Classes/NoiseTagCheckBoxView.html":{"name":"NoiseTagCheckBoxView","abstract":"<p>Undocumented</p>"},"Classes/NoiseTagRadioButton.html":{"name":"NoiseTagRadioButton","abstract":"<p>Undocumented</p>"},"Classes/NoiseTagPopupButtonView.html":{"name":"NoiseTagPopupButtonView","abstract":"<p>A <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagLabeledButtonView.html\">NoiseTagLabeledButtonView</a></code> which when pressed lets the user pick one out of a list of possible items in a popover.</p>"},"Classes/NoiseTagPopupItem.html":{"name":"NoiseTagPopupItem","abstract":"<p>Used for modeling the items a user can choose from in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagPopupButtonView.html\">NoiseTagPopupButtonView</a></code>.</p>"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)startNoiseTagControlOnNoiseTaggingView:":{"name":"startNoiseTagControlOn(noiseTaggingView:)","abstract":"<p>When a unit becomes the current unit – because it has been pushed, or because another unit was popped –, or if <code>NoiseTagging.update(view:forNoiseTaggingWithDelegate:)</code> is called, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbMain%20Symbols.html#/s:12NoiseTaggingA2A0A13TagControllerCvp\">NoiseTagging</a></code> calls this function on the delegate.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)respondToNoiseTagModeChange":{"name":"respondToNoiseTagModeChange()","abstract":"<p>Called whenever the <code>mode</code> of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbMain%20Symbols.html#/s:12NoiseTaggingA2A0A13TagControllerCvp\">NoiseTagging</a></code> changes.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)contextDescription":{"name":"contextDescription()","abstract":"<p>Called after each update for logging purposes. If the delegate returns a <em>context description</em>, this is logged.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)respondToNoClick":{"name":"respondToNoClick()","abstract":"<p>Called whenever a trial ends because the maximum trial duration has passed and no control is being pressed.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)preparePlay":{"name":"preparePlay()","abstract":"<p>Called just before the flickering starts.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)trialsWillStartRunning":{"name":"trialsWillStartRunning()","abstract":"<p>Called just before trials start running.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)trialsStoppedRunning":{"name":"trialsStoppedRunning()","abstract":"<p>Called just after trials stopped running.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)customBackgroundColorForView:":{"name":"customBackgroundColorFor(view:)","abstract":"<p>Optionally define an alternative background color for the view. By default the color is defined by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagController.html\">NoiseTagController</a></code>&lsquo;s <code>defaultBackgroundColorPrimary</code> setting.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)idsOfControlsToIncludeAsTargetInVerifyModeWithNoiseTaggingView:":{"name":"idsOfControlsToIncludeAsTargetInVerifyMode(noiseTaggingView:)","abstract":"<p>In some modes the framework randomly selects one of the controls as the <em>target</em>. By implementing this function, the delegate can limit the set of controls that can be selected as the target.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)nextTarget":{"name":"nextTarget()","abstract":"<p>This is part of functionality that will become available later on.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)thereWillBeANextTarget":{"name":"thereWillBeANextTarget()","abstract":"<p>This is part of functionality that will become available later on.</p>","parent_name":"NoiseTagDelegate"},"Protocols/NoiseTagDelegate.html#/c:@M@NoiseTagging@objc(pl)NoiseTagDelegate(im)trialEnded":{"name":"trialEnded()","abstract":"<p>This is part of functionality that will become available later on.</p>","parent_name":"NoiseTagDelegate"},"Classes/NoiseTagControlProperties.html#/s:12NoiseTagging0A20TagControlPropertiesC10identifierSSSgvp":{"name":"identifier","abstract":"<p>The control&rsquo;s identifier.</p>","parent_name":"NoiseTagControlProperties"},"Classes/NoiseTagControlProperties.html#/s:12NoiseTagging0A20TagControlPropertiesC20customUtopiaObjectIDSiSgvp":{"name":"customUtopiaObjectID","abstract":"<p>The control&rsquo;s utopia object ID.</p>","parent_name":"NoiseTagControlProperties"},"Classes/NoiseTagControlProperties.html#/s:12NoiseTagging0A20TagControlPropertiesC24participatesInFlickeringSbvp":{"name":"participatesInFlickering","abstract":"<p>Whether the control flickers.</p>","parent_name":"NoiseTagControlProperties"},"Classes/NoiseTagControlProperties.html#/s:12NoiseTagging0A20TagControlPropertiesC7enabledSbvp":{"name":"enabled","abstract":"<p>Whether the control is enabled.</p>","parent_name":"NoiseTagControlProperties"},"Classes/NoiseTagControlProperties.html#/s:12NoiseTagging0A20TagControlPropertiesC21playClickSoundOnPressSbvp":{"name":"playClickSoundOnPress","abstract":"<p>Whether a click sound should be played when the control is pressed.</p>","parent_name":"NoiseTagControlProperties"},"Classes/NoiseTagControlProperties.html#/s:12NoiseTagging0A20TagControlPropertiesC7controlAcA0acD0_p_tcfc":{"name":"init(control:)","abstract":"<p>Initialize <code>NoiseTagControlProperties</code> for the passed <code>control</code>.</p>","parent_name":"NoiseTagControlProperties"},"Classes/NoiseTagControlProperties.html#/s:12NoiseTagging0A20TagControlPropertiesC9addAction6timing7closureySd_yyctF":{"name":"addAction(timing:closure:)","abstract":"<p>Add an action. All of a control&rsquo;s actions are executed when the control is pressed, be it by brain or by touch.</p>","parent_name":"NoiseTagControlProperties"},"Protocols/NoiseTagControl.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)showWithAppearance:withDefaultColor:":{"name":"show(appearance:withDefaultColor:)","abstract":"<p>This function is called by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbMain%20Symbols.html#/s:12NoiseTaggingA2A0A13TagControllerCvp\">NoiseTagging</a></code> to show a noise tag on the control.</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)setFeedbackColorWithColor:":{"name":"setFeedbackColor(color:)","abstract":"<p>This function is called by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbMain%20Symbols.html#/s:12NoiseTaggingA2A0A13TagControllerCvp\">NoiseTagging</a></code> to show <em>feedback</em> colors on the control, for example for <em>highlighting</em> – indicating that the user should look at the control during calibration –, or for providing visual feedback when there is a button press. By default <code>UIView</code> calls <code>setFlickerColor(color:)</code>, passing this color, or if the color is <code>nil</code>, it calls <code>self.updateUIDependingOnNoiseTagging()</code>.</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)layerToHandleNoiseTagTaps":{"name":"layerToHandleNoiseTagTaps()","abstract":"<p>In order to allow the user to press buttons using touch, the framework performs a simple kind of hit test. A tap is considered to be on a control if it is in the bounds of the layer returned by this function. By default <code>UIView</code> simply returns its <code>layer</code>.</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)layerForFeedbackAnimations":{"name":"layerForFeedbackAnimations()","abstract":"<p>The framework applies a number of animations to controls. For example it might make a control &lsquo;wiggle&rsquo; to indicate that the user should look at, or it might animate a control&rsquo;s size when it is pressed by touch. These animations are applied to the layer returned by this function. By default <code>UIView</code> simply returns its <code>layer</code>.</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)layerFlickeringPart":{"name":"layerFlickeringPart()","abstract":"<p>The framework may use Metal for drawing the parts of the UI that actually flicker. If Metal is used, for each control the contents of the layer returned by this function is what is drawn using Metal, in a view on top of everything else. By default <code>UIView</code> simply returns its <code>layer</code>.</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(py)isHiddenOrIsInHiddenView":{"name":"isHiddenOrIsInHiddenView","abstract":"<p>The hit test applied by <code>layerToHandleNoiseTagTaps</code> always fails if this function returns <code>true</code>. Also, brain presses are only possible on controls for which this returns <code>false</code>. This prevents that controls that are in the view hierarchy, invisible but enabled, be it by accident or on purpose, can still be pressed. By default <code>UIView</code> returns <code>false</code> only if its <code>isHidden</code> property is <code>false</code> and the same holds for all of its super views.</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)updateUIDependingOnNoiseTagging":{"name":"updateUIDependingOnNoiseTagging()","abstract":"<p>This function allows controls to respond when the state of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbMain%20Symbols.html#/s:12NoiseTaggingA2A0A13TagControllerCvp\">NoiseTagging</a></code> changes in some way that might be relevant for their appearance. Currently this only is called when the flickering starts or stops. <code>UIView</code>&lsquo;s default implementation is as follows:</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)participatesInFlickering_didChangeValue":{"name":"participatesInFlickering_didChangeValue()","abstract":"<p>Allows controls to respond when the value of <code>self.noiseTagging.participatesInFlickering</code> changes.</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/c:@M@NoiseTagging@objc(pl)NoiseTagControl(im)noiseTagControlIsEnabled_didChangeValue":{"name":"noiseTagControlIsEnabled_didChangeValue()","abstract":"<p>Allows controls to respond when the value of <code>self.noiseTagging.enabled</code> changes.</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/s:12NoiseTagging0A10TagControlPAAE05noiseB0AA0acD10PropertiesCvp":{"name":"noiseTagging","abstract":"<p>This returns the control&rsquo;s <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagControlProperties.html\">NoiseTagControlProperties</a></code>.</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/s:12NoiseTagging0A10TagControlPAAE23defaultColorWhenEnabledSo7UIColorCvp":{"name":"defaultColorWhenEnabled","abstract":"<p>Convenience var for getting the default color that controls have if they are enabled but not flickering.</p>","parent_name":"NoiseTagControl"},"Protocols/NoiseTagControl.html#/s:12NoiseTagging0A10TagControlPAAE24defaultColorWhenDisabledSo7UIColorCvp":{"name":"defaultColorWhenDisabled","abstract":"<p>Convenience var for getting the default color that controls have if they are disabled but not flickering.</p>","parent_name":"NoiseTagControl"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC8colorFor3bitSo7UIColorCSb_tF":{"name":"colorFor(bit:)","abstract":"<p>The default flicker color to display for either a 1 or a 0 in the noise tag.</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC14updateControls0E4Codeyyyc_tF":{"name":"updateControls(updateCode:)","abstract":"<p>Perform an update.</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC4push4view03foraB12WithDelegateySo6UIViewC_AA0acI0_ptF":{"name":"push(view:forNoiseTaggingWithDelegate:)","abstract":"<p>Push a new unit on the noise tagging stack.</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC3popyyF":{"name":"pop()","abstract":"<p>Pop the current noise tagging unit, making the second-topmost unit the active unit.</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC6update4view03foraB12WithDelegateySo6UIViewC_AA0acI0_ptF":{"name":"update(view:forNoiseTaggingWithDelegate:)","abstract":"<p>Restart noise tagging on the current unit.</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC16trialsAreRunningSbvp":{"name":"trialsAreRunning","abstract":"<p>Whether noise tagging trials are running.</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC11blockTrials11forDurationySdSg_tF":{"name":"blockTrials(forDuration:)","abstract":"<p>Use this function whenever starting the next noise tagging trial should be postponed untill a certain task has been finished.</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC13unblockTrialsyyF":{"name":"unblockTrials()","abstract":"<p>This function is the counterpart to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC11blockTrials11forDurationySdSg_tF\">blockTrials(forDuration:)</a></code>. You call <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC11blockTrials11forDurationySdSg_tF\">blockTrials(forDuration:)</a></code> to postpone starting the next noise tagging trial untill a certain task has been finished. If you do this without passing a duration, you must call <code>unblockTrials</code> once that task is finished.</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC8settingsAA0aC13SetOfSettingsCvp":{"name":"settings","abstract":"<p>You can use <code><a href=\"36f8f5912051ae747ef441d6511ca4cbMain%20Symbols.html#/s:12NoiseTaggingA2A0A13TagControllerCvp\">NoiseTagging</a></code>&lsquo;s <code>settings</code> property to customise how the framework operates.</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC15startBrainSetup020pushedFromNavigationD0019withCompletionAfterfG0ySo012UINavigationD0CSg_yyctF":{"name":"startBrainSetup(pushedFromNavigationController:withCompletionAfterBrainSetup:)","abstract":"<p>Call this function to bring up the standard UI for connecting to the MindAffect Decoder and connecting a brain.</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC5voiceAA15VoiceDefinitionCvp":{"name":"voice","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/s:12NoiseTagging0A13TagControllerC19timeInBetweenTrialsSdvp":{"name":"timeInBetweenTrials","abstract":"<p>Undocumented</p>","parent_name":"NoiseTagController"},"Classes/NoiseTagController.html#/c:@CM@NoiseTagging@objc(cs)NoiseTagController(cm)nFramesPerBit":{"name":"nFramesPerBit()","abstract":"<p>In the future this will no longer be public.</p>","parent_name":"NoiseTagController"},"Main%20Symbols.html#/s:12NoiseTaggingA2A0A13TagControllerCvp":{"name":"NoiseTagging","abstract":"<p>This provides easy access to the singleton NoiseTagController.</p>"},"Classes/NoiseTagController.html":{"name":"NoiseTagController","abstract":"<p>This class provides a singleton <code>NoiseTagController</code>, which is responsible for coordinating everything that has to do with noise tagging. Access the singleton instance using the convenience variable <code><a href=\"36f8f5912051ae747ef441d6511ca4cbMain%20Symbols.html#/s:12NoiseTaggingA2A0A13TagControllerCvp\">NoiseTagging</a></code>.</p>"},"Protocols/NoiseTagControl.html":{"name":"NoiseTagControl","abstract":"<p>Objects conforming to <code>NoiseTagControl</code> are <em>controls</em>. Being a control means being a brain-pressable button.</p>"},"Classes/NoiseTagControlProperties.html":{"name":"NoiseTagControlProperties","abstract":"<p>Each <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/NoiseTagControl.html\">NoiseTagControl</a></code> has a <code>noiseTagging</code> property of type <code>NoiseTagControlProperties</code>. The purpose of this <code>noiseTagging</code> property is to store a number of things that are needed to make noise tagging work. It is also your main point of access to define how each control behaves as a brain-pressable button.</p>"},"Protocols/NoiseTagDelegate.html":{"name":"NoiseTagDelegate","abstract":"<p>The main responsibility of a <code>NoiseTagDelegate</code> is to prepare a unit for brain control by assigning actions to controls.</p>"},"readme.html":{"name":"README"},"quick-start.html":{"name":"Quick Start"},"main-programming-guide.html":{"name":"Main Programming Guide"},"Programming%20Guides.html":{"name":"Programming Guides"},"Main%20Symbols.html":{"name":"Main Symbols"},"Controls.html":{"name":"Controls"},"Keyboard.html":{"name":"Keyboard"},"Settings.html":{"name":"Settings"},"Other%20Guides.html":{"name":"Other Guides","abstract":"<p>The following guides are available globally.</p>"},"Other%20Global%20Variables.html":{"name":"Other Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Other%20Enums.html":{"name":"Other Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Other%20Extensions.html":{"name":"Other Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Other%20Protocols.html":{"name":"Other Protocols","abstract":"<p>The following protocols are available globally.</p>"}}